<rules>
<rule>
<key>STATIC_JAVA_SWAPPED_ARGUMENTS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SWAPPED_ARGUMENTS_none</configKey>
<description><![CDATA[ The arguments to a function call are provided in the wrong order.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.THREADING_thread_run</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.THREADING_thread_run</configKey>
<description><![CDATA[ Calling Thread.run does not actually create a thread]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ITERATOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ITERATOR_generic</configKey>
<description><![CDATA[ A call to next() or previous() on an iterator that may not have a next or previous element]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ITERATOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ITERATOR_none</configKey>
<description><![CDATA[ A call to next() or previous() on an iterator that may not have a next or previous element]]></description>
</rule>
<rule>
<key>STATIC_JAVA_JDBC_CONNECTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_JDBC_CONNECTION_generic</configKey>
<description><![CDATA[ Calling commit on an auto-commit Connection, or calling certain methods on closed connections causes an exception, or leak of a database connection, which should be closed after use]]></description>
</rule>
<rule>
<key>STATIC_JAVA_JDBC_CONNECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_JDBC_CONNECTION_none</configKey>
<description><![CDATA[ Calling commit on an auto-commit Connection, or calling certain methods on closed connections causes an exception]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ORM_ABANDONED_TRANSIENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ORM_ABANDONED_TRANSIENT_none</configKey>
<description><![CDATA[ New objects are not persisted.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ORM_LOST_UPDATE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ORM_LOST_UPDATE_none</configKey>
<description><![CDATA[ New or modified objects are not persisted.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ORM_LOAD_NULL_CHECK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ORM_LOAD_NULL_CHECK_none</configKey>
<description><![CDATA[ A possibly proxy object is pointlessly tested for null.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNMODIFIABLE_COLLECTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNMODIFIABLE_COLLECTION_generic</configKey>
<description><![CDATA[ Attempt to modify a collection that is wrapped by an unmodifiable adapter]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNMODIFIABLE_COLLECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNMODIFIABLE_COLLECTION_none</configKey>
<description><![CDATA[ Attempt to modify a collection that is wrapped by an unmodifiable adapter]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HIBERNATE_BAD_HASHCODE_bad_equals</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HIBERNATE_BAD_HASHCODE_bad_equals</configKey>
<description><![CDATA[ The result of equals() depends on an entity's primary database key]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HIBERNATE_BAD_HASHCODE_bad_hashcode</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HIBERNATE_BAD_HASHCODE_bad_hashcode</configKey>
<description><![CDATA[ The result of hashCode() depends on an entity's primary database key]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HIBERNATE_BAD_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HIBERNATE_BAD_HASHCODE_none</configKey>
<description><![CDATA[ The result of hashCode() depends on an entity's primary database key]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.CODING_STYLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.CODING_STYLE_generic</configKey>
<description><![CDATA[ System.exit and Runtime.exit should not be called in libraries, J2EE applications, and many other applications]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.CODING_STYLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.CODING_STYLE_none</configKey>
<description><![CDATA[ System.exit and Runtime.exit should not be called in libraries, J2EE applications, and many other applications]]></description>
</rule>
<rule>
<key>STATIC_JAVA_USE_AFTER_FREE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_USE_AFTER_FREE_generic</configKey>
<description><![CDATA[ Use of an object after its resources have been released]]></description>
</rule>
<rule>
<key>STATIC_JAVA_USE_AFTER_FREE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_USE_AFTER_FREE_none</configKey>
<description><![CDATA[ Use of an object after its resources have been released]]></description>
</rule>
<rule>
<key>STATIC_JAVA_INVALIDATE_ITERATOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_INVALIDATE_ITERATOR_generic</configKey>
<description><![CDATA[ An iterator is being used after the source container of the iterator is modified]]></description>
</rule>
<rule>
<key>STATIC_JAVA_INVALIDATE_ITERATOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_INVALIDATE_ITERATOR_none</configKey>
<description><![CDATA[ An iterator is being used after the source container of the iterator is modified]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CLASSCAST_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CLASSCAST_generic</configKey>
<description><![CDATA[ Object of one type put into a container, but then later downcast to a different type when extracted]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CLASSCAST_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CLASSCAST_none</configKey>
<description><![CDATA[ Object of one type put into a container, but then later downcast to a different type when extracted]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FORWARD_CLASSCAST_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FORWARD_CLASSCAST_generic</configKey>
<description><![CDATA[ Object is checked for compatibility with a particular subtype, but then later downcast without a check]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FORWARD_CLASSCAST_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FORWARD_CLASSCAST_none</configKey>
<description><![CDATA[ Object is checked for compatibility with a particular subtype, but then later downcast without a check]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_OVERRIDE_case</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_OVERRIDE_case</configKey>
<description><![CDATA[ This method does not override the superclass method because the names differ in capitalization]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_OVERRIDE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_OVERRIDE_generic</configKey>
<description><![CDATA[ This method does not override the superclass method because the names differ in capitalization or because one or more argument types differ by package]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_OVERRIDE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_OVERRIDE_none</configKey>
<description><![CDATA[ This method does not override the superclass method because the names differ in capitalization or because one or more argument types differ by package]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_OVERRIDE_package</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_OVERRIDE_package</configKey>
<description><![CDATA[ The method differs from a method in the superclass method because one or more argument types differ by package]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CALL_SUPER_clone</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CALL_SUPER_clone</configKey>
<description><![CDATA[ All implementations of Object.clone are required to call super.clone to allocate the new object]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CALL_SUPER_finalize</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CALL_SUPER_finalize</configKey>
<description><![CDATA[ It is good practice to call super.finalize in finalize methods]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CALL_SUPER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CALL_SUPER_generic</configKey>
<description><![CDATA[ Overrider does not call the superclass method, even though most other overriders do or all overriders of this method should]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CALL_SUPER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CALL_SUPER_none</configKey>
<description><![CDATA[ Overrider does not call the superclass method, even though most other overriders do]]></description>
</rule>
<rule>
<key>STATIC_JAVA_VIRTUAL_IN_CTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_VIRTUAL_IN_CTOR_generic</configKey>
<description><![CDATA[ A virtual method is called in a constructor]]></description>
</rule>
<rule>
<key>STATIC_JAVA_VIRTUAL_IN_CTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_VIRTUAL_IN_CTOR_none</configKey>
<description><![CDATA[ A virtual method is called in a constructor]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.EXPLICIT_DEPRECATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.EXPLICIT_DEPRECATION_generic</configKey>
<description><![CDATA[ Calling a deprecated method]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.EXPLICIT_DEPRECATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.EXPLICIT_DEPRECATION_none</configKey>
<description><![CDATA[ Calling a deprecated method]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MUTABLE_COMPARISON_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MUTABLE_COMPARISON_generic</configKey>
<description><![CDATA[ The compareTo method should not read from non-constant fields]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MUTABLE_COMPARISON_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MUTABLE_COMPARISON_none</configKey>
<description><![CDATA[ The compareTo method should not read from non-constant fields]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.GC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.GC_generic</configKey>
<description><![CDATA[ Explicit garbage collection should not be performed in most applications, and it is usually incorrect in libraries]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.GC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.GC_none</configKey>
<description><![CDATA[ Explicit garbage collection should not be performed in most applications, and it is usually incorrect in libraries]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PRIVATE_COLLECTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PRIVATE_COLLECTION_generic</configKey>
<description><![CDATA[ A private Collection field is returned and then modified]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PRIVATE_COLLECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PRIVATE_COLLECTION_none</configKey>
<description><![CDATA[ A private Collection field is returned and then modified]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MUTABLE_HASHCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MUTABLE_HASHCODE_generic</configKey>
<description><![CDATA[ The hashCode method should not read from non-constant fields]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MUTABLE_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MUTABLE_HASHCODE_none</configKey>
<description><![CDATA[ The hashCode method should not read from non-constant fields]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNCALLED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNCALLED_generic</configKey>
<description><![CDATA[ Method is not called from anywhere in the program]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNCALLED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNCALLED_none</configKey>
<description><![CDATA[ Method is not called from anywhere in the program]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.JRE14COMPATIBLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.JRE14COMPATIBLE_generic</configKey>
<description><![CDATA[ This method is not available in Java Runtime Environment 1.4]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.JRE14COMPATIBLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.JRE14COMPATIBLE_none</configKey>
<description><![CDATA[ This method is not available in Java Runtime Environment 1.4]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.JRE15COMPATIBLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.JRE15COMPATIBLE_generic</configKey>
<description><![CDATA[ This method is not available in Java Runtime Environment 1.5]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.JRE15COMPATIBLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.JRE15COMPATIBLE_none</configKey>
<description><![CDATA[ This method is not available in Java Runtime Environment 1.5]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.LOCALIZATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.LOCALIZATION_generic</configKey>
<description><![CDATA[ This method relies on the platform's default character set]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.LOCALIZATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.LOCALIZATION_none</configKey>
<description><![CDATA[ This method relies on the platform's default character set]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.THREADING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.THREADING_generic</configKey>
<description><![CDATA[ Relying on finalizers is unsafe or calling Thread.run does not actually create a thread]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.THREADING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.THREADING_none</configKey>
<description><![CDATA[ Relying on finalizers is unsafe]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SET_STATIC_IN_NON_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SET_STATIC_IN_NON_STATIC_generic</configKey>
<description><![CDATA[ A static field is assigned in a non-static method]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SET_STATIC_IN_NON_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SET_STATIC_IN_NON_STATIC_none</configKey>
<description><![CDATA[ A static field is assigned in a non-static method]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNUSED_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNUSED_VALUE_none</configKey>
<description><![CDATA[ Value returned from a method was never used]]></description>
</rule>
<rule>
<key>STATIC_JAVA_GUARDED_BY_VIOLATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_GUARDED_BY_VIOLATION_generic</configKey>
<description><![CDATA[ Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_GUARDED_BY_VIOLATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_GUARDED_BY_VIOLATION_none</configKey>
<description><![CDATA[ Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_INDIRECT_GUARDED_BY_VIOLATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_INDIRECT_GUARDED_BY_VIOLATION_generic</configKey>
<description><![CDATA[ Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_INDIRECT_GUARDED_BY_VIOLATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_INDIRECT_GUARDED_BY_VIOLATION_none</configKey>
<description><![CDATA[ Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_NON_STATIC_GUARDING_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_NON_STATIC_GUARDING_STATIC_generic</configKey>
<description><![CDATA[ Static field is protected by a per-instance lock]]></description>
</rule>
<rule>
<key>STATIC_JAVA_NON_STATIC_GUARDING_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_NON_STATIC_GUARDING_STATIC_none</configKey>
<description><![CDATA[ Static field is protected by a per-instance lock]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DOUBLE_CHECK_LOCK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DOUBLE_CHECK_LOCK_generic</configKey>
<description><![CDATA[ Checking a variable for initialization outside of a synchronized section, then checking again once inside the section]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DOUBLE_CHECK_LOCK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DOUBLE_CHECK_LOCK_none</configKey>
<description><![CDATA[ Checking a variable for initialization outside of a synchronized section, then checking again once inside the section]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SINGLETON_RACE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SINGLETON_RACE_none</configKey>
<description><![CDATA[ There is a thread unsafe modification of a field (instance or static) from a method call on a singleton.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_GUARDED_BY_VIOLATION_unlocked_read</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_GUARDED_BY_VIOLATION_unlocked_read</configKey>
<description><![CDATA[ Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_GUARDED_BY_VIOLATION_unlocked_write</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_GUARDED_BY_VIOLATION_unlocked_write</configKey>
<description><![CDATA[ Thread shared data is accessed without holding an appropriate lock, possibly causing a race condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNSAFE_LAZY_INIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNSAFE_LAZY_INIT_generic</configKey>
<description><![CDATA[ Using lazy initialization is unsafe in a multithreaded application without a synchronized block]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNSAFE_LAZY_INIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNSAFE_LAZY_INIT_none</configKey>
<description><![CDATA[ Using lazy initialization is unsafe in a multithreaded application without a synchronized block]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ATOMICITY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ATOMICITY_generic</configKey>
<description><![CDATA[ Non-atomic update of a concurrently shared value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ATOMICITY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ATOMICITY_none</configKey>
<description><![CDATA[ Non-atomic update of a concurrently shared value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SERVLET_ATOMICITY_attribute_init_race</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SERVLET_ATOMICITY_attribute_init_race</configKey>
<description><![CDATA[ Non-atomic update of a concurrently shared value when initializing the attribute.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SERVLET_ATOMICITY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SERVLET_ATOMICITY_none</configKey>
<description><![CDATA[ Non-atomic update of a concurrently shared value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SERVLET_ATOMICITY_violation_on_session_object</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SERVLET_ATOMICITY_violation_on_session_object</configKey>
<description><![CDATA[ Non-atomic update of a concurrently shared value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_VOLATILE_ATOMICITY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_VOLATILE_ATOMICITY_generic</configKey>
<description><![CDATA[ A volatile variable is updated in a non-atomic manner]]></description>
</rule>
<rule>
<key>STATIC_JAVA_VOLATILE_ATOMICITY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_VOLATILE_ATOMICITY_none</configKey>
<description><![CDATA[ A volatile variable is updated in a non-atomic manner]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DEADCODE_dead_case_in_switch</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DEADCODE_dead_case_in_switch</configKey>
<description><![CDATA[ Switch never goes directly to this case]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DEADCODE_dead_default_in_switch</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DEADCODE_dead_default_in_switch</configKey>
<description><![CDATA[ Default in switch statement is dead code]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MISSING_RESTORE_likely</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MISSING_RESTORE_likely</configKey>
<description><![CDATA[ Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MISSING_RESTORE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MISSING_RESTORE_none</configKey>
<description><![CDATA[ Handles classes of flow where a function is either saving some external value, modifying the external value, and then clearly intending to restore it to its original state but failing to do so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then clearly intending to restore it to the expected value but failing to do so along a path.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DEADCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DEADCODE_generic</configKey>
<description><![CDATA[ Code can never be reached because of a logical contradiction]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DEADCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DEADCODE_none</configKey>
<description><![CDATA[ Code can never be reached because of a logical contradiction]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MISSING_BREAK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MISSING_BREAK_generic</configKey>
<description><![CDATA[ Missing break statement between cases in switch statement]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MISSING_BREAK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MISSING_BREAK_none</configKey>
<description><![CDATA[ Missing break statement between cases in switch statement]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.FALLTHROUGH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.FALLTHROUGH_generic</configKey>
<description><![CDATA[ Missing break statement between cases in switch statement]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.FALLTHROUGH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.FALLTHROUGH_none</configKey>
<description><![CDATA[ Missing break statement between cases in switch statement]]></description>
</rule>
<rule>
<key>STATIC_JAVA_NESTING_INDENT_MISMATCH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_NESTING_INDENT_MISMATCH_none</configKey>
<description><![CDATA[ The indentation of this code suggests it is nested when it is not.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DEADCODE_redundant_test</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DEADCODE_redundant_test</configKey>
<description><![CDATA[ Test always evaluates the same]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.ABNORMAL_TERMINATION_OF_FINALLY_BLOCK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.ABNORMAL_TERMINATION_OF_FINALLY_BLOCK_generic</configKey>
<description><![CDATA[ Returning or abnormally terminating a finally block]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.ABNORMAL_TERMINATION_OF_FINALLY_BLOCK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.ABNORMAL_TERMINATION_OF_FINALLY_BLOCK_none</configKey>
<description><![CDATA[ Returning or abnormally terminating a finally block]]></description>
</rule>
<rule>
<key>STATIC_JAVA_STRAY_SEMICOLON_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_STRAY_SEMICOLON_generic</configKey>
<description><![CDATA[ A semicolon was erroneously inserted at a wrong point in the code, e.g. after an if, while, or for construct and before the block]]></description>
</rule>
<rule>
<key>STATIC_JAVA_STRAY_SEMICOLON_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_STRAY_SEMICOLON_none</configKey>
<description><![CDATA[ A semicolon was erroneously inserted at a wrong point in the code, e.g. after an if, while, or for construct and before the block]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNREACHABLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNREACHABLE_none</configKey>
<description><![CDATA[ Code block is unreachable because of the syntactic structure of the code]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CHECKED_RETURN_short_read</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CHECKED_RETURN_short_read</configKey>
<description><![CDATA[ Value returned from a function and indicating the number of bytes read is ignored.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CHECKED_RETURN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CHECKED_RETURN_generic</configKey>
<description><![CDATA[ Value returned from a function is not checked for errors before being used]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CHECKED_RETURN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CHECKED_RETURN_none</configKey>
<description><![CDATA[ Value returned from a function is not checked for errors before being used]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CHECKED_RETURN_library_function</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CHECKED_RETURN_library_function</configKey>
<description><![CDATA[ Value returned from a library function is not checked for errors before being used.  This value may indicate an error condition.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CHECKED_RETURN_user_required</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CHECKED_RETURN_user_required</configKey>
<description><![CDATA[ Value returned from a program function is not checked before being used.  It has been marked that its return value should always be checked.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_RESOURCE_LEAK_exceptional_path</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_RESOURCE_LEAK_exceptional_path</configKey>
<description><![CDATA[ Leak of a system resource on an exception path (probably error handling)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_XSS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_XSS_none</configKey>
<description><![CDATA[ Untrusted user-supplied data is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_JAVA_CODE_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_JAVA_CODE_INJECTION_none</configKey>
<description><![CDATA[ A user-controllable string is evaluated by an API that produces dynamic Java bytecode.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_EL_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_EL_INJECTION_none</configKey>
<description><![CDATA[ A user-controllable string is evaluated by an expression language resolver.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PATH_MANIPULATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PATH_MANIPULATION_none</configKey>
<description><![CDATA[ A user-controllable string is used as part or all of a filesystem path or filename.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_JSP_SQL_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_JSP_SQL_INJECTION_none</configKey>
<description><![CDATA[ A user-controllable string is injected into a SQL query, via the JSTL SQL tag (e.g. &lt;sql:query&gt;)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_LDAP_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_LDAP_INJECTION_none</configKey>
<description><![CDATA[ A user-controllable string is injected into an LDAP query.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_OS_CMD_INJECTION_command_as_array_of_args</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_OS_CMD_INJECTION_command_as_array_of_args</configKey>
<description><![CDATA[ Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_OS_CMD_INJECTION_command_as_one_string</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_OS_CMD_INJECTION_command_as_one_string</configKey>
<description><![CDATA[ Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_OS_CMD_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_OS_CMD_INJECTION_none</configKey>
<description><![CDATA[ Untrusted user-supplied data is inserted into an operating system command without adequate validation, escaping, or filtering. This inserted data can change the intent of the operating system command. The change to the operating system command may result in the unauthorized disclosure, destruction, or modification of sensitive data or operating system resources.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SQLI_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SQLI_none</configKey>
<description><![CDATA[ Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SQLI_sink</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SQLI_sink</configKey>
<description><![CDATA[ Untrusted user-supplied data is inserted into a SQL statement without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SCRIPT_CODE_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SCRIPT_CODE_INJECTION_none</configKey>
<description><![CDATA[ Script code interpreted or executed on the server is constructed from user-controllable data.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_TAINT_ASSERT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_TAINT_ASSERT_none</configKey>
<description><![CDATA[ A user assertion is present that states a value is not tainted.  However, the tool taint computation indicates that this value is tainted.  The validity of the assertion should be reviewed and removed if incorrect. If the assertion is valid, review how tainted data is inserted into the value and remove the taint source as appropriate.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.ASSIGNMENT_IN_CONDITIONAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.ASSIGNMENT_IN_CONDITIONAL_generic</configKey>
<description><![CDATA[ An assignment (=) occurs where compare (==) is probably intended]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.ASSIGNMENT_IN_CONDITIONAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.ASSIGNMENT_IN_CONDITIONAL_none</configKey>
<description><![CDATA[ An assignment (=) occurs where compare (==) is probably intended]]></description>
</rule>
<rule>
<key>STATIC_JAVA_COPY_PASTE_ERROR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_COPY_PASTE_ERROR_generic</configKey>
<description><![CDATA[ A copied piece of code is inconsistent with the original]]></description>
</rule>
<rule>
<key>STATIC_JAVA_COPY_PASTE_ERROR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_COPY_PASTE_ERROR_none</configKey>
<description><![CDATA[ A copied piece of code is inconsistent with the original]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_EQ_type</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_EQ_type</configKey>
<description><![CDATA[ Structural equality is never true for objects of different types]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_missing_parentheses</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_missing_parentheses</configKey>
<description><![CDATA[ Missing parentheses caused unintended operator precedence]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_same_on_both_sides</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_same_on_both_sides</configKey>
<description><![CDATA[ The same expression occurs on both sides of an operator.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_EQ_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_EQ_generic</configKey>
<description><![CDATA[ Using wrong equality operation (equals method vs. "==") for this type]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_EQ_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_EQ_none</configKey>
<description><![CDATA[ Using wrong equality operation (equals method vs. "==") for this type]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_EQ_referential</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_EQ_referential</configKey>
<description><![CDATA[ Using referential equality when value equality is the norm for this type]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_EQ_structural</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_EQ_structural</configKey>
<description><![CDATA[ Using equals method when "==" is the norm for this type]]></description>
</rule>
<rule>
<key>STATIC_JAVA_BAD_SHIFT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_BAD_SHIFT_none</configKey>
<description><![CDATA[ A bit shift operation has a shift amount which is too large or has a negative value.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_bit_and_with_zero</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_bit_and_with_zero</configKey>
<description><![CDATA[ Bitwise-and ('&amp;') operation applied to zero always produces zero]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_generic</configKey>
<description><![CDATA[ An operation with non-constant operands that computes a result with constant value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_none</configKey>
<description><![CDATA[ An operation with non-constant operands that computes a result with constant value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_extra_high_bits</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_extra_high_bits</configKey>
<description><![CDATA[ In an operation, the high-order bits of wider operand do not affect the narrower operand]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_logical_vs_bitwise</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_logical_vs_bitwise</configKey>
<description><![CDATA[ Logical operator used in place of bitwise operator or vice versa]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_result_independent_of_operands</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_result_independent_of_operands</configKey>
<description><![CDATA[ An operation with non-constant operands that computes a result with constant value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_unnecessary_op_assign</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_unnecessary_op_assign</configKey>
<description><![CDATA[ Using a bitwise assignment operator to assign a constant value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_OVERFLOW_BEFORE_WIDEN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_OVERFLOW_BEFORE_WIDEN_none</configKey>
<description><![CDATA[ An integer overflow occurs, with the result converted to a wider integer type]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_operator_confusion</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONSTANT_EXPRESSION_RESULT_operator_confusion</configKey>
<description><![CDATA[ Wrong operator used in expression]]></description>
</rule>
<rule>
<key>STATIC_JAVA_XSS_UNKNOWN_SOURCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_XSS_UNKNOWN_SOURCE_none</configKey>
<description><![CDATA[ Non-constant data of unknown origin is inserted into a context that can execute JavaScript without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.DWR_DEBUG_MODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.DWR_DEBUG_MODE_none</configKey>
<description><![CDATA[ DWR debug mode is enabled in the configuration file.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.DUPLICATE_SERVLET_NAME_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.DUPLICATE_SERVLET_NAME_none</configKey>
<description><![CDATA[ A servlet-name is used twice for different servlets, one of them will not be used by the container.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.DYNAMIC_DATA_HTML_COMMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.DYNAMIC_DATA_HTML_COMMENT_none</configKey>
<description><![CDATA[ Dynamic data is output in HTML comments inside JSP tags.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.MISSING_JSF2_SECURITY_CONSTRAINT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.MISSING_JSF2_SECURITY_CONSTRAINT_none</configKey>
<description><![CDATA[ The JSF2 web application does not define a security constraint that restricts access to Facelet source code.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.JAVAEE_MISSING_HTTPONLY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.JAVAEE_MISSING_HTTPONLY_none</configKey>
<description><![CDATA[ The HttpOnly flag is not enabled for the session cookies.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.MISSING_GLOBAL_EXCEPTION_HANDLER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.MISSING_GLOBAL_EXCEPTION_HANDLER_none</configKey>
<description><![CDATA[ The web application does not define a global exception handler.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_REGEX_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_REGEX_INJECTION_none</configKey>
<description><![CDATA[ A regular expression is constructed from a user-controllable string.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SQLI_UNKNOWN_SOURCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SQLI_UNKNOWN_SOURCE_none</configKey>
<description><![CDATA[ Non-constant data of unknown origin is inserted into a SQL statement without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SQLI_UNKNOWN_SOURCE_nosink</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SQLI_UNKNOWN_SOURCE_nosink</configKey>
<description><![CDATA[ Non-constant data of unknown origin is inserted into a SQL statement without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SQLI_UNKNOWN_SOURCE_sink</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SQLI_UNKNOWN_SOURCE_sink</configKey>
<description><![CDATA[ Non-constant data of unknown origin is inserted into a SQL statement without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.SPRING_SECURITY_DISABLE_AUTH_TAGS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.SPRING_SECURITY_DISABLE_AUTH_TAGS_none</configKey>
<description><![CDATA[ Spring Security authorize JSP tags are disabled.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.SPRING_SECURITY_DEBUG_MODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.SPRING_SECURITY_DEBUG_MODE_none</configKey>
<description><![CDATA[ Spring Security is used with debug mode enabled.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.SPRING_SECURITY_HARDCODED_CREDS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.SPRING_SECURITY_HARDCODED_CREDS_none</configKey>
<description><![CDATA[ Hardcoded credentials are found in the Spring Security configuration.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.SPRING_SECURITY_REMEMBER_ME_HARDCODED_KEY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.SPRING_SECURITY_REMEMBER_ME_HARDCODED_KEY_none</configKey>
<description><![CDATA[ The remember-me key is hardcoded in the Spring Security configuration.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.STRUTS2_DYNAMIC_METHOD_INVOCATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.STRUTS2_DYNAMIC_METHOD_INVOCATION_none</configKey>
<description><![CDATA[ Struts2 DynamicMethodInvocation allowed.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.STRUTS2_CONFIG_BROWSER_PLUGIN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.STRUTS2_CONFIG_BROWSER_PLUGIN_none</configKey>
<description><![CDATA[ Presence of the Struts2 config-browser plugin.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_JCR_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_JCR_INJECTION_none</configKey>
<description><![CDATA[ A user-controllable string is injected into a Content Repository for Java query]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.HTTP_VERB_TAMPERING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.HTTP_VERB_TAMPERING_none</configKey>
<description><![CDATA[ The web application is vulnerable to HTTP Verb Tampering attack.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HEADER_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HEADER_INJECTION_none</configKey>
<description><![CDATA[ A user-controllable string is used to construct an HTTP header name.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_JSP_DYNAMIC_INCLUDE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_JSP_DYNAMIC_INCLUDE_none</configKey>
<description><![CDATA[ A JSP include path is partially or entirely user-controllable.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_SQLI_nosink</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_SQLI_nosink</configKey>
<description><![CDATA[ Untrusted user-supplied data is inserted into an apparent SQL statement without adequate validation, escaping, or filtering]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.SPRING_SECURITY_SESSION_FIXATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.SPRING_SECURITY_SESSION_FIXATION_none</configKey>
<description><![CDATA[ The session fixation protection of Spring Security is disabled.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_CONFIG.STRUTS2_ENABLED_DEV_MODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_CONFIG.STRUTS2_ENABLED_DEV_MODE_none</configKey>
<description><![CDATA[ Struts2 developer mode enabled.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HARDCODED_CREDENTIALS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HARDCODED_CREDENTIALS_none</configKey>
<description><![CDATA[ Credentials are stored directly in the source code]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HARDCODED_CREDENTIALS_hardcoded_credential_crypto</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HARDCODED_CREDENTIALS_hardcoded_credential_crypto</configKey>
<description><![CDATA[ A cryptographic key is stored directly in the source code.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HARDCODED_CREDENTIALS_hardcoded_credential_passwd</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HARDCODED_CREDENTIALS_hardcoded_credential_passwd</configKey>
<description><![CDATA[ A password is stored directly in the source code.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HARDCODED_CREDENTIALS_hardcoded_credential_token</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HARDCODED_CREDENTIALS_hardcoded_credential_token</configKey>
<description><![CDATA[ A security token is stored directly in the source code.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_XPATH_INJECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_XPATH_INJECTION_none</configKey>
<description><![CDATA[ A user-controllable string is injected into an XPath query]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FORWARD_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FORWARD_NULL_generic</configKey>
<description><![CDATA[ Reference may be null but is then dereferenced anyway]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FORWARD_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FORWARD_NULL_none</configKey>
<description><![CDATA[ Reference is checked against null but then dereferenced anyway]]></description>
</rule>
<rule>
<key>STATIC_JAVA_REVERSE_INULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_REVERSE_INULL_generic</configKey>
<description><![CDATA[ All paths that lead to this null pointer comparison already dereference the pointer earlier]]></description>
</rule>
<rule>
<key>STATIC_JAVA_REVERSE_INULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_REVERSE_INULL_none</configKey>
<description><![CDATA[ All paths that lead to this null pointer comparison already dereference the pointer earlier]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FORWARD_NULL_needs_null_check</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FORWARD_NULL_needs_null_check</configKey>
<description><![CDATA[ A method parameter that is allowed to be null is dereferenced without a check]]></description>
</rule>
<rule>
<key>STATIC_JAVA_NULL_RETURNS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_NULL_RETURNS_generic</configKey>
<description><![CDATA[ Return value of function which returns null is dereferenced without checking]]></description>
</rule>
<rule>
<key>STATIC_JAVA_NULL_RETURNS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_NULL_RETURNS_none</configKey>
<description><![CDATA[ Return value of function which returns null is dereferenced without checking]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FORWARD_NULL_deref_constant_null</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FORWARD_NULL_deref_constant_null</configKey>
<description><![CDATA[ Dereference of an explicit null value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FORWARD_NULL_deref_constant_zero</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FORWARD_NULL_deref_constant_zero</configKey>
<description><![CDATA[ Dereference of an explicit null value]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.*_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.*_generic</configKey>
<description><![CDATA[ A parse warning may indicate a bug, or poor coding practice]]></description>
</rule>
<rule>
<key>STATIC_JAVA_PW.*_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_PW.*_none</configKey>
<description><![CDATA[ A parse warning may indicate a bug, or poor coding practice]]></description>
</rule>
<rule>
<key>STATIC_JAVA_STRING_CONCAT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_STRING_CONCAT_generic</configKey>
<description><![CDATA[ A String object is concatenated within a loop, which results in the creation of a StringBuffer and new String]]></description>
</rule>
<rule>
<key>STATIC_JAVA_STRING_CONCAT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_STRING_CONCAT_none</configKey>
<description><![CDATA[ A String object is concatenated within a loop, which results in the creation of a StringBuffer and new String]]></description>
</rule>
<rule>
<key>STATIC_JAVA_HIBERNATE_UNNECESSARY_GET_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_HIBERNATE_UNNECESSARY_GET_none</configKey>
<description><![CDATA[ There is an unnecessary call to org.hibernate.Session.get(...) which will result in a database access. In some cases, org.hibernate.Session.load(...) can be called to improve performance.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_ORM_UNNECESSARY_GET_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_ORM_UNNECESSARY_GET_none</configKey>
<description><![CDATA[ There is an unnecessary call to org.hibernate.Session.get(...) which will result in a database access. In some cases, org.hibernate.Session.load(...) can be called to improve performance.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNEXPECTED_SYNC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNEXPECTED_SYNC_generic</configKey>
<description><![CDATA[ Synchronized block appears to be unnecessary because the lock protects no variables consistently]]></description>
</rule>
<rule>
<key>STATIC_JAVA_UNEXPECTED_SYNC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_UNEXPECTED_SYNC_none</configKey>
<description><![CDATA[ Synchronized block appears to be unnecessary because the lock protects no variables consistently]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.PERFORMANCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.PERFORMANCE_generic</configKey>
<description><![CDATA[ This particular way of using a method or constructor is not the most efficient]]></description>
</rule>
<rule>
<key>STATIC_JAVA_DC.PERFORMANCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_DC.PERFORMANCE_none</configKey>
<description><![CDATA[ This particular way of using a method or constructor is not the most efficient]]></description>
</rule>
<rule>
<key>STATIC_JAVA_INVALIDATE_ITERATOR_map_put</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_INVALIDATE_ITERATOR_map_put</configKey>
<description><![CDATA[ A map was modified with Map.put while it was being iterated on]]></description>
</rule>
<rule>
<key>STATIC_JAVA_MISSING_RESTORE_possible</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_MISSING_RESTORE_possible</configKey>
<description><![CDATA[ Handles classes of flow where a function is either saving some external value, modifying the external value, and then possibly intending to restore it to its original state but not doing so along one of many paths; or else is checking whether an external has some expected value, modifying the external value, then possibly intending to restore it to the expected value but not doing so along a path.  Such code is only incorrect if the intent really was to restore along all paths.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_INFINITE_LOOP_no_escape</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_INFINITE_LOOP_no_escape</configKey>
<description><![CDATA[ Infinite loop with no exit condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_INFINITE_LOOP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_INFINITE_LOOP_none</configKey>
<description><![CDATA[ Infinite loop with unsatisfiable exit condition]]></description>
</rule>
<rule>
<key>STATIC_JAVA_LOCK_INVERSION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_LOCK_INVERSION_generic</configKey>
<description><![CDATA[ Threads may try to acquire two locks in different orders, potentially causing deadlock]]></description>
</rule>
<rule>
<key>STATIC_JAVA_LOCK_INVERSION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_LOCK_INVERSION_none</configKey>
<description><![CDATA[ Threads may try to acquire two locks in different orders, potentially causing deadlock]]></description>
</rule>
<rule>
<key>STATIC_JAVA_LOCK_ORDERING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_LOCK_ORDERING_generic</configKey>
<description><![CDATA[ Threads may try to acquire three or more locks in different orders, potentially causing deadlock]]></description>
</rule>
<rule>
<key>STATIC_JAVA_LOCK_ORDERING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_LOCK_ORDERING_none</configKey>
<description><![CDATA[ Threads may try to acquire three or more locks in different orders, potentially causing deadlock]]></description>
</rule>
<rule>
<key>STATIC_JAVA_JDBC_CONNECTION_leak</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_JDBC_CONNECTION_leak</configKey>
<description><![CDATA[ Leak of a database connection, which should be closed after use]]></description>
</rule>
<rule>
<key>STATIC_JAVA_RESOURCE_LEAK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_RESOURCE_LEAK_generic</configKey>
<description><![CDATA[ Leak of a system resource]]></description>
</rule>
<rule>
<key>STATIC_JAVA_RESOURCE_LEAK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_RESOURCE_LEAK_none</configKey>
<description><![CDATA[ Leak of a system resource]]></description>
</rule>
<rule>
<key>STATIC_JAVA_RESOURCE_LEAK_socket</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_RESOURCE_LEAK_socket</configKey>
<description><![CDATA[ Leak of a socket resource]]></description>
</rule>
<rule>
<key>STATIC_JAVA_RESOURCE_LEAK_stream</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_RESOURCE_LEAK_stream</configKey>
<description><![CDATA[ Leak of a stream representing a file or other resource]]></description>
</rule>
<rule>
<key>STATIC_JAVA_TA.INSUFFICIENT_FILE_COVERAGE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_TA.INSUFFICIENT_FILE_COVERAGE_none</configKey>
<description><![CDATA[ File does not reach coverage threshold required by the policy]]></description>
</rule>
<rule>
<key>STATIC_JAVA_TA.INSUFFICIENT_COVERAGE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_TA.INSUFFICIENT_COVERAGE_none</configKey>
<description><![CDATA[ Function does not reach coverage threshold required by the policy]]></description>
</rule>
<rule>
<key>STATIC_JAVA_TA.*_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_TA.*_none</configKey>
<description><![CDATA[ Code does not satisfy the testing policy established by your organization.]]></description>
</rule>
<rule>
<key>STATIC_JAVA_TA.UNCALLED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_TA.UNCALLED_none</configKey>
<description><![CDATA[ Function is not called from any test]]></description>
</rule>
<rule>
<key>STATIC_JAVA_TA.NO_COVERAGE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_TA.NO_COVERAGE_none</configKey>
<description><![CDATA[ Function is not covered by any test]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY_generic</configKey>
<description><![CDATA[ The code calls putNextEntry(), immediately followed by a call to closeEntry(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.AM_CREATES_EMPTY_JAR_FILE_ENTRY_none</configKey>
<description><![CDATA[ The code calls putNextEntry(), immediately followed by a call to closeEntry(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY_generic</configKey>
<description><![CDATA[ The code calls putNextEntry(), immediately followed by a call to closeEntry(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.AM_CREATES_EMPTY_ZIP_FILE_ENTRY_none</configKey>
<description><![CDATA[ The code calls putNextEntry(), immediately followed by a call to closeEntry(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS_generic</configKey>
<description><![CDATA[ The equals(Object o) method shouldn't make any assumptions about the type of o. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS_none</configKey>
<description><![CDATA[ The equals(Object o) method shouldn't make any assumptions about the type of o. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_SIGNED_CHECK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_SIGNED_CHECK_generic</configKey>
<description><![CDATA[ This method compares an expression such as ((event.detail &amp; SWT.SELECTED) &gt; 0). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_SIGNED_CHECK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_SIGNED_CHECK_none</configKey>
<description><![CDATA[ This method compares an expression such as ((event.detail &amp; SWT.SELECTED) &gt; 0). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CN_IDIOM_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CN_IDIOM_generic</configKey>
<description><![CDATA[ Class implements Cloneable but does not define or    use the clone method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CN_IDIOM_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CN_IDIOM_none</configKey>
<description><![CDATA[ Class implements Cloneable but does not define or    use the clone method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CN_IDIOM_NO_SUPER_CALL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CN_IDIOM_NO_SUPER_CALL_generic</configKey>
<description><![CDATA[ This non-final class defines a clone() method that does not call super.clone(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CN_IDIOM_NO_SUPER_CALL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CN_IDIOM_NO_SUPER_CALL_none</configKey>
<description><![CDATA[ This non-final class defines a clone() method that does not call super.clone(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE_generic</configKey>
<description><![CDATA[ This class defines a clone() method but the class doesn't implement Cloneable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE_none</configKey>
<description><![CDATA[ This class defines a clone() method but the class doesn't implement Cloneable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CO_ABSTRACT_SELF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CO_ABSTRACT_SELF_generic</configKey>
<description><![CDATA[ This class defines a covariant version of compareTo(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CO_ABSTRACT_SELF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CO_ABSTRACT_SELF_none</configKey>
<description><![CDATA[ This class defines a covariant version of compareTo(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CO_SELF_NO_OBJECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CO_SELF_NO_OBJECT_generic</configKey>
<description><![CDATA[ This class defines a covariant version of compareTo(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CO_SELF_NO_OBJECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CO_SELF_NO_OBJECT_none</configKey>
<description><![CDATA[ This class defines a covariant version of compareTo(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DE_MIGHT_DROP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DE_MIGHT_DROP_generic</configKey>
<description><![CDATA[ This method might drop an exception. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DE_MIGHT_DROP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DE_MIGHT_DROP_none</configKey>
<description><![CDATA[ This method might drop an exception. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DE_MIGHT_IGNORE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DE_MIGHT_IGNORE_generic</configKey>
<description><![CDATA[ This method might ignore an exception. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DE_MIGHT_IGNORE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DE_MIGHT_IGNORE_none</configKey>
<description><![CDATA[ This method might ignore an exception. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS_generic</configKey>
<description><![CDATA[ The entrySet() method is allowed to return a view of the      underlying Map in which a single Entry object is reused and returned      during the iteration. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS_none</configKey>
<description><![CDATA[ The entrySet() method is allowed to return a view of the      underlying Map in which a single Entry object is reused and returned      during the iteration. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_RANDOM_USED_ONLY_ONCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_RANDOM_USED_ONLY_ONCE_generic</configKey>
<description><![CDATA[ This code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_RANDOM_USED_ONLY_ONCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_RANDOM_USED_ONLY_ONCE_none</configKey>
<description><![CDATA[ This code creates a java.util.Random object, uses it to generate one random number, and then discards the Random object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION_generic</configKey>
<description><![CDATA[ If you want to remove all elements from a collection c, use c.clear, not c.removeAll(c). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION_none</configKey>
<description><![CDATA[ If you want to remove all elements from a collection c, use c.clear, not c.removeAll(c). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEDGED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEDGED_generic</configKey>
<description><![CDATA[ This code creates a classloader,  which requires a security manager. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEDGED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEDGED_none</configKey>
<description><![CDATA[ This code creates a classloader,  which requires a security manager. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEDGED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEDGED_generic</configKey>
<description><![CDATA[ This code invokes a method that requires a security permission check. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEDGED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEDGED_none</configKey>
<description><![CDATA[ This code invokes a method that requires a security permission check. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_EXIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_EXIT_generic</configKey>
<description><![CDATA[ Invoking System.exit shuts down the entire Java virtual machine. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_EXIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_EXIT_none</configKey>
<description><![CDATA[ Invoking System.exit shuts down the entire Java virtual machine. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_RUN_FINALIZERS_ON_EXIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_RUN_FINALIZERS_ON_EXIT_generic</configKey>
<description><![CDATA[ <em>Never call System.runFinalizersOnExit or Runtime.runFinalizersOnExit for any reason: they are among the most dangerous methods in the Java libraries.</em> -- Joshua Bloch ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_RUN_FINALIZERS_ON_EXIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_RUN_FINALIZERS_ON_EXIT_none</configKey>
<description><![CDATA[ <em>Never call System.runFinalizersOnExit or Runtime.runFinalizersOnExit for any reason: they are among the most dangerous methods in the Java libraries.</em> -- Joshua Bloch ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ_generic</configKey>
<description><![CDATA[ This code compares a java.lang.String parameter for reference equality using the == or != operators. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ES_COMPARING_PARAMETER_STRING_WITH_EQ_none</configKey>
<description><![CDATA[ This code compares a java.lang.String parameter for reference equality using the == or != operators. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ES_COMPARING_STRINGS_WITH_EQ_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ES_COMPARING_STRINGS_WITH_EQ_generic</configKey>
<description><![CDATA[ This code compares java.lang.String objects for reference equality using the == or != operators. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ES_COMPARING_STRINGS_WITH_EQ_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ES_COMPARING_STRINGS_WITH_EQ_none</configKey>
<description><![CDATA[ This code compares java.lang.String objects for reference equality using the == or != operators. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_ABSTRACT_SELF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_ABSTRACT_SELF_generic</configKey>
<description><![CDATA[ This class defines a covariant version of equals(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_ABSTRACT_SELF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_ABSTRACT_SELF_none</configKey>
<description><![CDATA[ This class defines a covariant version of equals(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS_generic</configKey>
<description><![CDATA[ This equals method is checking to see if the argument is some incompatible type (i.e., a class that is neither a supertype nor subtype of the class that defines the equals method). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS_none</configKey>
<description><![CDATA[ This equals method is checking to see if the argument is some incompatible type (i.e., a class that is neither a supertype nor subtype of the class that defines the equals method). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_COMPARETO_USE_OBJECT_EQUALS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_COMPARETO_USE_OBJECT_EQUALS_generic</configKey>
<description><![CDATA[ This class defines a compareTo(...) method but inherits its   equals() method from java.lang.Object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_COMPARETO_USE_OBJECT_EQUALS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_COMPARETO_USE_OBJECT_EQUALS_none</configKey>
<description><![CDATA[ This class defines a compareTo(...) method but inherits its   equals() method from java.lang.Object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_GETCLASS_AND_CLASS_CONSTANT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_GETCLASS_AND_CLASS_CONSTANT_generic</configKey>
<description><![CDATA[ This class has an equals method that will be broken if it is inherited by subclasses. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_GETCLASS_AND_CLASS_CONSTANT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_GETCLASS_AND_CLASS_CONSTANT_none</configKey>
<description><![CDATA[ This class has an equals method that will be broken if it is inherited by subclasses. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_SELF_NO_OBJECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_SELF_NO_OBJECT_generic</configKey>
<description><![CDATA[ This class defines a covariant version of equals(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_SELF_NO_OBJECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_SELF_NO_OBJECT_none</configKey>
<description><![CDATA[ This class defines a covariant version of equals(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_EMPTY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_EMPTY_generic</configKey>
<description><![CDATA[ Empty finalize() methods are useless, so they should   be deleted. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_EMPTY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_EMPTY_none</configKey>
<description><![CDATA[ Empty finalize() methods are useless, so they should   be deleted. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_EXPLICIT_INVOCATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_EXPLICIT_INVOCATION_generic</configKey>
<description><![CDATA[ This method contains an explicit invocation of the finalize()   method on an object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_EXPLICIT_INVOCATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_EXPLICIT_INVOCATION_none</configKey>
<description><![CDATA[ This method contains an explicit invocation of the finalize()   method on an object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_FINALIZER_NULLS_FIELDS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_FINALIZER_NULLS_FIELDS_generic</configKey>
<description><![CDATA[ This finalizer nulls out fields. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_FINALIZER_NULLS_FIELDS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_FINALIZER_NULLS_FIELDS_none</configKey>
<description><![CDATA[ This finalizer nulls out fields. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_FINALIZER_ONLY_NULLS_FIELDS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_FINALIZER_ONLY_NULLS_FIELDS_generic</configKey>
<description><![CDATA[ This finalizer does nothing except null out fields. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_FINALIZER_ONLY_NULLS_FIELDS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_FINALIZER_ONLY_NULLS_FIELDS_none</configKey>
<description><![CDATA[ This finalizer does nothing except null out fields. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_MISSING_SUPER_CALL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_MISSING_SUPER_CALL_generic</configKey>
<description><![CDATA[ This finalize() method does not make a call to its   superclass's finalize() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_MISSING_SUPER_CALL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_MISSING_SUPER_CALL_none</configKey>
<description><![CDATA[ This finalize() method does not make a call to its   superclass's finalize() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_NULLIFY_SUPER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_NULLIFY_SUPER_generic</configKey>
<description><![CDATA[ This empty finalize() method explicitly negates the   effect of any finalizer defined by its superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_NULLIFY_SUPER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_NULLIFY_SUPER_none</configKey>
<description><![CDATA[ This empty finalize() method explicitly negates the   effect of any finalizer defined by its superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_USELESS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_USELESS_generic</configKey>
<description><![CDATA[ The only thing this finalize() method does is call   the superclass's finalize() method, making it   redundant. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_USELESS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_USELESS_none</configKey>
<description><![CDATA[ The only thing this finalize() method does is call   the superclass's finalize() method, making it   redundant. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_USES_NEWLINE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_USES_NEWLINE_generic</configKey>
<description><![CDATA[ This format string include a newline character (
). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_USES_NEWLINE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_USES_NEWLINE_none</configKey>
<description><![CDATA[ This format string include a newline character (
). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL_generic</configKey>
<description><![CDATA[ This call to a generic collection method passes an argument     while compile type Object where a specific type from     the generic type parameters is expected. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.GC_UNCHECKED_TYPE_IN_GENERIC_CALL_none</configKey>
<description><![CDATA[ This call to a generic collection method passes an argument     while compile type Object where a specific type from     the generic type parameters is expected. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_EQUALS_NO_HASHCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_EQUALS_NO_HASHCODE_generic</configKey>
<description><![CDATA[ This class overrides equals(Object), but does not   override hashCode(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_EQUALS_NO_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_EQUALS_NO_HASHCODE_none</configKey>
<description><![CDATA[ This class overrides equals(Object), but does not   override hashCode(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_EQUALS_USE_HASHCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_EQUALS_USE_HASHCODE_generic</configKey>
<description><![CDATA[ This class overrides equals(Object), but does not   override hashCode(), and inherits the implementation of   hashCode() from java.lang.Object (which returns   the identity hash code, an arbitrary value assigned to the object   by the VM). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_EQUALS_USE_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_EQUALS_USE_HASHCODE_none</configKey>
<description><![CDATA[ This class overrides equals(Object), but does not   override hashCode(), and inherits the implementation of   hashCode() from java.lang.Object (which returns   the identity hash code, an arbitrary value assigned to the object   by the VM). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_HASHCODE_NO_EQUALS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_HASHCODE_NO_EQUALS_generic</configKey>
<description><![CDATA[ This class defines a hashCode() method but not an   equals() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_HASHCODE_NO_EQUALS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_HASHCODE_NO_EQUALS_none</configKey>
<description><![CDATA[ This class defines a hashCode() method but not an   equals() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_HASHCODE_USE_OBJECT_EQUALS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_HASHCODE_USE_OBJECT_EQUALS_generic</configKey>
<description><![CDATA[ This class defines a hashCode() method but inherits its   equals() method from java.lang.Object   (which defines equality by comparing object references). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_HASHCODE_USE_OBJECT_EQUALS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_HASHCODE_USE_OBJECT_EQUALS_none</configKey>
<description><![CDATA[ This class defines a hashCode() method but inherits its   equals() method from java.lang.Object   (which defines equality by comparing object references). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_INHERITS_EQUALS_USE_HASHCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_INHERITS_EQUALS_USE_HASHCODE_generic</configKey>
<description><![CDATA[ This class inherits equals(Object) from an abstract   superclass, and hashCode() from java.lang.Object (which returns   the identity hash code, an arbitrary value assigned to the object   by the VM). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_INHERITS_EQUALS_USE_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_INHERITS_EQUALS_USE_HASHCODE_none</configKey>
<description><![CDATA[ This class inherits equals(Object) from an abstract   superclass, and hashCode() from java.lang.Object (which returns   the identity hash code, an arbitrary value assigned to the object   by the VM). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION_generic</configKey>
<description><![CDATA[ During the initialization of a class, the class makes an active use of a subclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION_none</configKey>
<description><![CDATA[ During the initialization of a class, the class makes an active use of a subclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IMSE_DONT_CATCH_IMSE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IMSE_DONT_CATCH_IMSE_generic</configKey>
<description><![CDATA[ IllegalMonitorStateException is generally only    thrown in case of a design flaw in your code (calling wait or    notify on an object you do not hold a lock on). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IMSE_DONT_CATCH_IMSE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IMSE_DONT_CATCH_IMSE_none</configKey>
<description><![CDATA[ IllegalMonitorStateException is generally only    thrown in case of a design flaw in your code (calling wait or    notify on an object you do not hold a lock on). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ISC_INSTANTIATE_STATIC_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ISC_INSTANTIATE_STATIC_CLASS_generic</configKey>
<description><![CDATA[ This class allocates an object that is based on a class that only supplies static methods. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ISC_INSTANTIATE_STATIC_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ISC_INSTANTIATE_STATIC_CLASS_none</configKey>
<description><![CDATA[ This class allocates an object that is based on a class that only supplies static methods. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IT_NO_SUCH_ELEMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IT_NO_SUCH_ELEMENT_generic</configKey>
<description><![CDATA[ This class implements the java.util.Iterator interface. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IT_NO_SUCH_ELEMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IT_NO_SUCH_ELEMENT_none</configKey>
<description><![CDATA[ This class implements the java.util.Iterator interface. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION_generic</configKey>
<description><![CDATA[ This code seems to be storing a non-serializable object into an HttpSession. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION_none</configKey>
<description><![CDATA[ This code seems to be storing a non-serializable object into an HttpSession. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS_generic</configKey>
<description><![CDATA[ The class is annotated with net.jcip.annotations.Immutable, and the rules for that annotation require that all fields are final.    . ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS_none</configKey>
<description><![CDATA[ The class is annotated with net.jcip.annotations.Immutable, and the rules for that annotation require that all fields are final.    . ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_BOOLEAN_RETURN_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_BOOLEAN_RETURN_NULL_generic</configKey>
<description><![CDATA[ A method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_BOOLEAN_RETURN_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_BOOLEAN_RETURN_NULL_none</configKey>
<description><![CDATA[ A method that returns either Boolean.TRUE, Boolean.FALSE or null is an accident waiting to happen. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_CLONE_COULD_RETURN_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_CLONE_COULD_RETURN_NULL_generic</configKey>
<description><![CDATA[ This clone method seems to return null in some circumstances, but clone is never     allowed to return a null value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_CLONE_COULD_RETURN_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_CLONE_COULD_RETURN_NULL_none</configKey>
<description><![CDATA[ This clone method seems to return null in some circumstances, but clone is never     allowed to return a null value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_DOES_NOT_HANDLE_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_DOES_NOT_HANDLE_NULL_generic</configKey>
<description><![CDATA[ This implementation of equals(Object) violates the contract defined       by java.lang.Object.equals() because it does not check for null       being passed as the parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_DOES_NOT_HANDLE_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_DOES_NOT_HANDLE_NULL_none</configKey>
<description><![CDATA[ This implementation of equals(Object) violates the contract defined       by java.lang.Object.equals() because it does not check for null       being passed as the parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT_generic</configKey>
<description><![CDATA[ This implementation of equals(Object) violates the contract defined       by java.lang.Object.equals() because it does not check for null       being passed as the argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT_none</configKey>
<description><![CDATA[ This implementation of equals(Object) violates the contract defined       by java.lang.Object.equals() because it does not check for null       being passed as the argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_TOSTRING_COULD_RETURN_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_TOSTRING_COULD_RETURN_NULL_generic</configKey>
<description><![CDATA[ This toString method seems to return null in some circumstances. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_TOSTRING_COULD_RETURN_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_TOSTRING_COULD_RETURN_NULL_none</configKey>
<description><![CDATA[ This toString method seems to return null in some circumstances. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_CLASS_NAMING_CONVENTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_CLASS_NAMING_CONVENTION_generic</configKey>
<description><![CDATA[ Class names should be nouns, in mixed case with the first letter of each internal word capitalized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_CLASS_NAMING_CONVENTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_CLASS_NAMING_CONVENTION_none</configKey>
<description><![CDATA[ Class names should be nouns, in mixed case with the first letter of each internal word capitalized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_CLASS_NOT_EXCEPTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_CLASS_NOT_EXCEPTION_generic</configKey>
<description><![CDATA[ This class is not derived from another exception, but ends with 'Exception'. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_CLASS_NOT_EXCEPTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_CLASS_NOT_EXCEPTION_none</configKey>
<description><![CDATA[ This class is not derived from another exception, but ends with 'Exception'. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_CONFUSING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_CONFUSING_generic</configKey>
<description><![CDATA[ The referenced methods have names that differ only by capitalization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_CONFUSING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_CONFUSING_none</configKey>
<description><![CDATA[ The referenced methods have names that differ only by capitalization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_FIELD_NAMING_CONVENTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_FIELD_NAMING_CONVENTION_generic</configKey>
<description><![CDATA[ Names of fields that are not final should be in mixed case with a lowercase first letter and the first letters of subsequent words capitalized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_FIELD_NAMING_CONVENTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_FIELD_NAMING_CONVENTION_none</configKey>
<description><![CDATA[ Names of fields that are not final should be in mixed case with a lowercase first letter and the first letters of subsequent words capitalized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER_generic</configKey>
<description><![CDATA[ The identifier is a word that is reserved as a keyword in later versions of Java, and your code will need to be changed in order to compile it in later versions of Java. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER_none</configKey>
<description><![CDATA[ The identifier is a word that is reserved as a keyword in later versions of Java, and your code will need to be changed in order to compile it in later versions of Java. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER_generic</configKey>
<description><![CDATA[ This identifier is used as a keyword in later versions of Java. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER_none</configKey>
<description><![CDATA[ This identifier is used as a keyword in later versions of Java. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_METHOD_NAMING_CONVENTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_METHOD_NAMING_CONVENTION_generic</configKey>
<description><![CDATA[ Methods should be verbs, in mixed case with the first letter lowercase, with the first letter of each internal word capitalized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_METHOD_NAMING_CONVENTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_METHOD_NAMING_CONVENTION_none</configKey>
<description><![CDATA[ Methods should be verbs, in mixed case with the first letter lowercase, with the first letter of each internal word capitalized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE_generic</configKey>
<description><![CDATA[ This class/interface has a simple name that is identical to that of an implemented/extended interface, except that the interface is in a different package (e.g., alpha.Foo extends beta.Foo). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_INTERFACE_none</configKey>
<description><![CDATA[ This class/interface has a simple name that is identical to that of an implemented/extended interface, except that the interface is in a different package (e.g., alpha.Foo extends beta.Foo). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS_generic</configKey>
<description><![CDATA[ This class has a simple name that is identical to that of its superclass, except that its superclass is in a different package (e.g., alpha.Foo extends beta.Foo). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_SAME_SIMPLE_NAME_AS_SUPERCLASS_none</configKey>
<description><![CDATA[ This class has a simple name that is identical to that of its superclass, except that its superclass is in a different package (e.g., alpha.Foo extends beta.Foo). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_VERY_CONFUSING_INTENTIONAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_VERY_CONFUSING_INTENTIONAL_generic</configKey>
<description><![CDATA[ The referenced methods have names that differ only by capitalization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_VERY_CONFUSING_INTENTIONAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_VERY_CONFUSING_INTENTIONAL_none</configKey>
<description><![CDATA[ The referenced methods have names that differ only by capitalization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_WRONG_PACKAGE_INTENTIONAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_WRONG_PACKAGE_INTENTIONAL_generic</configKey>
<description><![CDATA[ The method in the subclass doesn't override a similar method in a superclass because the type of a parameter doesn't exactly match the type of the corresponding parameter in the superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_WRONG_PACKAGE_INTENTIONAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_WRONG_PACKAGE_INTENTIONAL_none</configKey>
<description><![CDATA[ The method in the subclass doesn't override a similar method in a superclass because the type of a parameter doesn't exactly match the type of the corresponding parameter in the superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_generic</configKey>
<description><![CDATA[ The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_none</configKey>
<description><![CDATA[ The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH_generic</configKey>
<description><![CDATA[ The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all exception paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH_none</configKey>
<description><![CDATA[ The method creates a database resource (such as a database connection or row set), does not assign it to any fields, pass it to other methods, or return it, and does not appear to close the object on all exception paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OS_OPEN_STREAM_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OS_OPEN_STREAM_generic</configKey>
<description><![CDATA[ The method creates an IO stream object, does not assign it to any fields, pass it to other methods that might close it, or return it, and does not appear to close the stream on all paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OS_OPEN_STREAM_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OS_OPEN_STREAM_none</configKey>
<description><![CDATA[ The method creates an IO stream object, does not assign it to any fields, pass it to other methods that might close it, or return it, and does not appear to close the stream on all paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OS_OPEN_STREAM_EXCEPTION_PATH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OS_OPEN_STREAM_EXCEPTION_PATH_generic</configKey>
<description><![CDATA[ The method creates an IO stream object, does not assign it to any fields, pass it to other methods, or return it, and does not appear to close it on all possible exception paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OS_OPEN_STREAM_EXCEPTION_PATH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OS_OPEN_STREAM_EXCEPTION_PATH_none</configKey>
<description><![CDATA[ The method creates an IO stream object, does not assign it to any fields, pass it to other methods, or return it, and does not appear to close it on all possible exception paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS_generic</configKey>
<description><![CDATA[ The entrySet() method is allowed to return a view of the      underlying Map which is both an Iterator and Map.Entry. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS_none</configKey>
<description><![CDATA[ The entrySet() method is allowed to return a view of the      underlying Map which is both an Iterator and Map.Entry. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_generic</configKey>
<description><![CDATA[ This method compares a reference value to a constant using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_none</configKey>
<description><![CDATA[ This method compares a reference value to a constant using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN_generic</configKey>
<description><![CDATA[ This method compares two Boolean values using the == or != operator. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN_none</configKey>
<description><![CDATA[ This method compares two Boolean values using the == or != operator. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RR_NOT_CHECKED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RR_NOT_CHECKED_generic</configKey>
<description><![CDATA[ This method ignores the return value of one of the variants of   java.io.InputStream.read() which can return multiple bytes. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RR_NOT_CHECKED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RR_NOT_CHECKED_none</configKey>
<description><![CDATA[ This method ignores the return value of one of the variants of   java.io.InputStream.read() which can return multiple bytes. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SR_NOT_CHECKED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SR_NOT_CHECKED_generic</configKey>
<description><![CDATA[ This method ignores the return value of   java.io.InputStream.skip() which can skip multiple bytes. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SR_NOT_CHECKED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SR_NOT_CHECKED_none</configKey>
<description><![CDATA[ This method ignores the return value of   java.io.InputStream.skip() which can skip multiple bytes. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_NEGATING_RESULT_OF_COMPARETO_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_NEGATING_RESULT_OF_COMPARETO_generic</configKey>
<description><![CDATA[ This code negatives the return value of a compareTo or compare method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_NEGATING_RESULT_OF_COMPARETO_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_NEGATING_RESULT_OF_COMPARETO_none</configKey>
<description><![CDATA[ This code negatives the return value of a compareTo or compare method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE_generic</configKey>
<description><![CDATA[ This method returns a value that is not checked. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_BAD_PRACTICE_none</configKey>
<description><![CDATA[ This method returns a value that is not checked. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED_generic</configKey>
<description><![CDATA[ The class's static initializer creates an instance of the class before all of the static fields are assigned. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SI_INSTANCE_BEFORE_FINALS_ASSIGNED_none</configKey>
<description><![CDATA[ The class's static initializer creates an instance of the class before all of the static fields are assigned. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD_generic</configKey>
<description><![CDATA[ (<a href="http://web.archive.org/web/20090526170426/http://java.sun.com/developer/JDCTechTips/2003/tt1208.html">From JDC Tech Tip</a>): The Swing methods show(), setVisible(), and pack() will create the associated peer for the frame. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SW_SWING_METHODS_INVOKED_IN_SWING_THREAD_none</configKey>
<description><![CDATA[ (<a href="http://web.archive.org/web/20090526170426/http://java.sun.com/developer/JDCTechTips/2003/tt1208.html">From JDC Tech Tip</a>): The Swing methods show(), setVisible(), and pack() will create the associated peer for the frame. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_BAD_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_BAD_FIELD_generic</configKey>
<description><![CDATA[ This Serializable class defines a non-primitive instance field which is neither transient, Serializable, or java.lang.Object, and does not appear to implement the Externalizable interface or the readObject() and writeObject() methods. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_BAD_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_BAD_FIELD_none</configKey>
<description><![CDATA[ This Serializable class defines a non-primitive instance field which is neither transient, Serializable, or java.lang.Object, and does not appear to implement the Externalizable interface or the readObject() and writeObject() methods. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_BAD_FIELD_INNER_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_BAD_FIELD_INNER_CLASS_generic</configKey>
<description><![CDATA[ This Serializable class is an inner class of a non-serializable class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_BAD_FIELD_INNER_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_BAD_FIELD_INNER_CLASS_none</configKey>
<description><![CDATA[ This Serializable class is an inner class of a non-serializable class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_BAD_FIELD_STORE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_BAD_FIELD_STORE_generic</configKey>
<description><![CDATA[ A non-serializable value is stored into a non-transient field of a serializable class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_BAD_FIELD_STORE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_BAD_FIELD_STORE_none</configKey>
<description><![CDATA[ A non-serializable value is stored into a non-transient field of a serializable class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE_generic</configKey>
<description><![CDATA[ Because this class implements the Comparator interface, you should consider whether or not it should also implement the Serializable interface. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_COMPARATOR_SHOULD_BE_SERIALIZABLE_none</configKey>
<description><![CDATA[ Because this class implements the Comparator interface, you should consider whether or not it should also implement the Serializable interface. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_INNER_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_INNER_CLASS_generic</configKey>
<description><![CDATA[ This Serializable class is an inner class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_INNER_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_INNER_CLASS_none</configKey>
<description><![CDATA[ This Serializable class is an inner class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NONFINAL_SERIALVERSIONID_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NONFINAL_SERIALVERSIONID_generic</configKey>
<description><![CDATA[ This class defines a serialVersionUID field that is not final. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NONFINAL_SERIALVERSIONID_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NONFINAL_SERIALVERSIONID_none</configKey>
<description><![CDATA[ This class defines a serialVersionUID field that is not final. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NONLONG_SERIALVERSIONID_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NONLONG_SERIALVERSIONID_generic</configKey>
<description><![CDATA[ This class defines a serialVersionUID field that is not long. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NONLONG_SERIALVERSIONID_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NONLONG_SERIALVERSIONID_none</configKey>
<description><![CDATA[ This class defines a serialVersionUID field that is not long. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NONSTATIC_SERIALVERSIONID_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NONSTATIC_SERIALVERSIONID_generic</configKey>
<description><![CDATA[ This class defines a serialVersionUID field that is not static. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NONSTATIC_SERIALVERSIONID_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NONSTATIC_SERIALVERSIONID_none</configKey>
<description><![CDATA[ This class defines a serialVersionUID field that is not static. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_generic</configKey>
<description><![CDATA[ This class implements the Serializable interface    and its superclass does not. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_none</configKey>
<description><![CDATA[ This class implements the Serializable interface    and its superclass does not. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION_generic</configKey>
<description><![CDATA[ This class implements the Externalizable interface, but does   not define a void constructor. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION_none</configKey>
<description><![CDATA[ This class implements the Externalizable interface, but does   not define a void constructor. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT_generic</configKey>
<description><![CDATA[ In order for the readResolve method to be recognized by the serialization mechanism, it must be declared to have a return type of Object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_READ_RESOLVE_MUST_RETURN_OBJECT_none</configKey>
<description><![CDATA[ In order for the readResolve method to be recognized by the serialization mechanism, it must be declared to have a return type of Object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_NOT_RESTORED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_NOT_RESTORED_generic</configKey>
<description><![CDATA[ This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_NOT_RESTORED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_NOT_RESTORED_none</configKey>
<description><![CDATA[ This class contains a field that is updated at multiple places in the class, thus it seems to be part of the state of the class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NO_SERIALVERSIONID_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NO_SERIALVERSIONID_generic</configKey>
<description><![CDATA[ This class implements the Serializable interface, but does   not define a serialVersionUID field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_NO_SERIALVERSIONID_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_NO_SERIALVERSIONID_none</configKey>
<description><![CDATA[ This class implements the Serializable interface, but does   not define a serialVersionUID field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UI_INHERITANCE_UNSAFE_GETRESOURCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UI_INHERITANCE_UNSAFE_GETRESOURCE_generic</configKey>
<description><![CDATA[ Calling this.getClass().getResource(...) could give results other than expected if this class is extended by a class in another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UI_INHERITANCE_UNSAFE_GETRESOURCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UI_INHERITANCE_UNSAFE_GETRESOURCE_none</configKey>
<description><![CDATA[ Calling this.getClass().getResource(...) could give results other than expected if this class is extended by a class in another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BAC_BAD_APPLET_CONSTRUCTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BAC_BAD_APPLET_CONSTRUCTOR_generic</configKey>
<description><![CDATA[ This constructor calls methods in the parent Applet that rely on the AppletStub. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BAC_BAD_APPLET_CONSTRUCTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BAC_BAD_APPLET_CONSTRUCTOR_none</configKey>
<description><![CDATA[ This constructor calls methods in the parent Applet that rely on the AppletStub. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_generic</configKey>
<description><![CDATA[ This cast will always throw a ClassCastException. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_none</configKey>
<description><![CDATA[ This cast will always throw a ClassCastException. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY_generic</configKey>
<description><![CDATA[ This cast will always throw a ClassCastException. (<i>FindBugs&trade; Deprecated</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY_none</configKey>
<description><![CDATA[ This cast will always throw a ClassCastException. (<i>FindBugs&trade; Deprecated</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_generic</configKey>
<description><![CDATA[ This cast will always throw a ClassCastException. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_none</configKey>
<description><![CDATA[ This cast will always throw a ClassCastException. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY_generic</configKey>
<description><![CDATA[ This code is casting the result of calling toArray() on a collection to a type more specific than Object[]. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY_none</configKey>
<description><![CDATA[ This code is casting the result of calling toArray() on a collection to a type more specific than Object[]. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_INSTANCEOF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_INSTANCEOF_generic</configKey>
<description><![CDATA[ This instanceof test will always return false. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_IMPOSSIBLE_INSTANCEOF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_IMPOSSIBLE_INSTANCEOF_none</configKey>
<description><![CDATA[ This instanceof test will always return false. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_ADD_OF_SIGNED_BYTE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_ADD_OF_SIGNED_BYTE_generic</configKey>
<description><![CDATA[ Adds a byte value and a value which is known to have the 8 lower bits clear. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_ADD_OF_SIGNED_BYTE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_ADD_OF_SIGNED_BYTE_none</configKey>
<description><![CDATA[ Adds a byte value and a value which is known to have the 8 lower bits clear. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_AND_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_AND_generic</configKey>
<description><![CDATA[ This method compares an expression of the form (e &amp; C) to D, which will always compare unequal due to the specific values of constants C and D. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_AND_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_AND_none</configKey>
<description><![CDATA[ This method compares an expression of the form (e &amp; C) to D, which will always compare unequal due to the specific values of constants C and D. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_AND_ZZ_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_AND_ZZ_generic</configKey>
<description><![CDATA[ This method compares an expression of the form (e &amp; 0) to 0, which will always compare equal. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_AND_ZZ_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_AND_ZZ_none</configKey>
<description><![CDATA[ This method compares an expression of the form (e &amp; 0) to 0, which will always compare equal. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_IOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_IOR_generic</configKey>
<description><![CDATA[ This method compares an expression of the form (e | C) to D, which will always compare unequal due to the specific values of constants C and D. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_IOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_IOR_none</configKey>
<description><![CDATA[ This method compares an expression of the form (e | C) to D, which will always compare unequal due to the specific values of constants C and D. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_IOR_OF_SIGNED_BYTE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_IOR_OF_SIGNED_BYTE_generic</configKey>
<description><![CDATA[ Loads a byte value (e.g., a value loaded from a byte array or returned by a method with return type byte)  and performs a bitwise OR with that value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_IOR_OF_SIGNED_BYTE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_IOR_OF_SIGNED_BYTE_none</configKey>
<description><![CDATA[ Loads a byte value (e.g., a value loaded from a byte array or returned by a method with return type byte)  and performs a bitwise OR with that value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_SIGNED_CHECK_HIGH_BIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_SIGNED_CHECK_HIGH_BIT_generic</configKey>
<description><![CDATA[ This method compares an expression such as ((event.detail &amp; SWT.SELECTED) &gt; 0). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BIT_SIGNED_CHECK_HIGH_BIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BIT_SIGNED_CHECK_HIGH_BIT_none</configKey>
<description><![CDATA[ This method compares an expression such as ((event.detail &amp; SWT.SELECTED) &gt; 0). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BOA_BADLY_OVERRIDDEN_ADAPTER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BOA_BADLY_OVERRIDDEN_ADAPTER_generic</configKey>
<description><![CDATA[ The declared method does not actually override a method from Adapter parent class, as its name suggests. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BOA_BADLY_OVERRIDDEN_ADAPTER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BOA_BADLY_OVERRIDDEN_ADAPTER_none</configKey>
<description><![CDATA[ The declared method does not actually override a method from Adapter parent class, as its name suggests. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_BAD_SHIFT_AMOUNT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_BAD_SHIFT_AMOUNT_generic</configKey>
<description><![CDATA[ The code performs shift of a 32 bit int by a constant amount outside the range 0..31. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_BAD_SHIFT_AMOUNT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_BAD_SHIFT_AMOUNT_none</configKey>
<description><![CDATA[ The code performs shift of a 32 bit int by a constant amount outside the range 0..31. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR_generic</configKey>
<description><![CDATA[ A wrapped primitive value is unboxed and converted to another primitive type as part of the evaluation of a conditional ternary operator (the  b ? e1 : e2 operator). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR_none</configKey>
<description><![CDATA[ A wrapped primitive value is unboxed and converted to another primitive type as part of the evaluation of a conditional ternary operator (the  b ? e1 : e2 operator). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CO_COMPARETO_RESULTS_MIN_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CO_COMPARETO_RESULTS_MIN_VALUE_generic</configKey>
<description><![CDATA[ In some situation, this compareTo or compare method returns the  constant Integer.MIN_VALUE, which is an exceptionally bad practice. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CO_COMPARETO_RESULTS_MIN_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CO_COMPARETO_RESULTS_MIN_VALUE_none</configKey>
<description><![CDATA[ In some situation, this compareTo or compare method returns the  constant Integer.MIN_VALUE, which is an exceptionally bad practice. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_STORE_OF_CLASS_LITERAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_STORE_OF_CLASS_LITERAL_generic</configKey>
<description><![CDATA[ This instruction assigns a class literal to a variable and then never uses it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_STORE_OF_CLASS_LITERAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_STORE_OF_CLASS_LITERAL_none</configKey>
<description><![CDATA[ This instruction assigns a class literal to a variable and then never uses it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_OVERWRITTEN_INCREMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_OVERWRITTEN_INCREMENT_generic</configKey>
<description><![CDATA[ The code performs an increment operation (e.g., i++) and then immediately overwrites it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_OVERWRITTEN_INCREMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_OVERWRITTEN_INCREMENT_none</configKey>
<description><![CDATA[ The code performs an increment operation (e.g., i++) and then immediately overwrites it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_ARGUMENTS_WRONG_ORDER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_ARGUMENTS_WRONG_ORDER_generic</configKey>
<description><![CDATA[ The arguments to this method call seem to be in the wrong order. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_ARGUMENTS_WRONG_ORDER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_ARGUMENTS_WRONG_ORDER_none</configKey>
<description><![CDATA[ The arguments to this method call seem to be in the wrong order. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_BAD_MONTH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_BAD_MONTH_generic</configKey>
<description><![CDATA[ This code passes a constant month value outside the expected range of 0..11 to a method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_BAD_MONTH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_BAD_MONTH_none</configKey>
<description><![CDATA[ This code passes a constant month value outside the expected range of 0..11 to a method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE_generic</configKey>
<description><![CDATA[ This code creates a BigDecimal from a double value that doesn't translate well to a decimal number. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE_none</configKey>
<description><![CDATA[ This code creates a BigDecimal from a double value that doesn't translate well to a decimal number. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_CALLING_NEXT_FROM_HASNEXT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_CALLING_NEXT_FROM_HASNEXT_generic</configKey>
<description><![CDATA[ The hasNext() method invokes the next() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_CALLING_NEXT_FROM_HASNEXT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_CALLING_NEXT_FROM_HASNEXT_none</configKey>
<description><![CDATA[ The hasNext() method invokes the next() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES_generic</configKey>
<description><![CDATA[ This call to a generic collection's method would only make sense if a collection contained itself (e.g., if s.contains(s) were true). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES_none</configKey>
<description><![CDATA[ This call to a generic collection's method would only make sense if a collection contained itself (e.g., if s.contains(s) were true). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_DOH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_DOH_generic</configKey>
<description><![CDATA[ This partical method invocation doesn't make sense, for reasons that should be apparent from inspection. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_DOH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_DOH_none</configKey>
<description><![CDATA[ This partical method invocation doesn't make sense, for reasons that should be apparent from inspection. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_INVOKING_HASHCODE_ON_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_INVOKING_HASHCODE_ON_ARRAY_generic</configKey>
<description><![CDATA[ The code invokes hashCode on an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_INVOKING_HASHCODE_ON_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_INVOKING_HASHCODE_ON_ARRAY_none</configKey>
<description><![CDATA[ The code invokes hashCode on an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT_generic</configKey>
<description><![CDATA[ The Double.longBitsToDouble method is invoked, but a 32 bit int value is passed     as an argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_FINAL_PKGPROTECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_FINAL_PKGPROTECT_generic</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT_none</configKey>
<description><![CDATA[ The Double.longBitsToDouble method is invoked, but a 32 bit int value is passed     as an argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_VACUOUS_SELF_COLLECTION_CALL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_VACUOUS_SELF_COLLECTION_CALL_generic</configKey>
<description><![CDATA[ This call doesn't make sense. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_VACUOUS_SELF_COLLECTION_CALL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_VACUOUS_SELF_COLLECTION_CALL_none</configKey>
<description><![CDATA[ This call doesn't make sense. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION_generic</configKey>
<description><![CDATA[ Unless an annotation has itself been annotated with  @Retention(RetentionPolicy.RUNTIME), the annotation can't be observed using reflection (e.g., by using the isAnnotationPresent method).    . ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION_none</configKey>
<description><![CDATA[ Unless an annotation has itself been annotated with  @Retention(RetentionPolicy.RUNTIME), the annotation can't be observed using reflection (e.g., by using the isAnnotationPresent method).    . ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR_generic</configKey>
<description><![CDATA[ (<a href="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html">Javadoc</a>) While ScheduledThreadPoolExecutor inherits from ThreadPoolExecutor, a few of the inherited tuning methods are not useful for it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR_none</configKey>
<description><![CDATA[ (<a href="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html">Javadoc</a>) While ScheduledThreadPoolExecutor inherits from ThreadPoolExecutor, a few of the inherited tuning methods are not useful for it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS_generic</configKey>
<description><![CDATA[ (<a href="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html#ScheduledThreadPoolExecutor(int)">Javadoc</a>) A ScheduledThreadPoolExecutor with zero core threads will never execute anything; changes to the max pool size are ignored. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS_none</configKey>
<description><![CDATA[ (<a href="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html#ScheduledThreadPoolExecutor(int)">Javadoc</a>) A ScheduledThreadPoolExecutor with zero core threads will never execute anything; changes to the max pool size are ignored. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD_generic</configKey>
<description><![CDATA[ This call doesn't pass any objects to the EasyMock method, so the call doesn't do anything. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD_none</configKey>
<description><![CDATA[ This call doesn't pass any objects to the EasyMock method, so the call doesn't do anything. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_ARRAY_AND_NONARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_ARRAY_AND_NONARRAY_generic</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) to compare an array and a reference that doesn't seem to be an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_ARRAY_AND_NONARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_ARRAY_AND_NONARRAY_none</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) to compare an array and a reference that doesn't seem to be an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_BAD_ARRAY_COMPARE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_BAD_ARRAY_COMPARE_generic</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) method on an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_BAD_ARRAY_COMPARE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_BAD_ARRAY_COMPARE_none</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) method on an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_INCOMPATIBLE_ARRAY_COMPARE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_INCOMPATIBLE_ARRAY_COMPARE_generic</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) to compare two arrays, but the arrays of incompatible types (e.g., String[] and StringBuffer[], or String[] and int[]). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_INCOMPATIBLE_ARRAY_COMPARE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_INCOMPATIBLE_ARRAY_COMPARE_none</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) to compare two arrays, but the arrays of incompatible types (e.g., String[] and StringBuffer[], or String[] and int[]). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_NULL_ARG_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_NULL_ARG_generic</configKey>
<description><![CDATA[ This method calls equals(Object), passing a null value as the argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_NULL_ARG_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_NULL_ARG_none</configKey>
<description><![CDATA[ This method calls equals(Object), passing a null value as the argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_CLASS_AND_INTERFACE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_CLASS_AND_INTERFACE_generic</configKey>
<description><![CDATA[ This method calls equals(Object) on two references,  one of which is a class and the other an interface, where neither the class nor any of its non-abstract subclasses implement the interface. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_CLASS_AND_INTERFACE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_CLASS_AND_INTERFACE_none</configKey>
<description><![CDATA[ This method calls equals(Object) on two references,  one of which is a class and the other an interface, where neither the class nor any of its non-abstract subclasses implement the interface. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_INTERFACES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_INTERFACES_generic</configKey>
<description><![CDATA[ This method calls equals(Object) on two references of unrelated interface types, where neither is a subtype of the other, and there are no known non-abstract classes which implement both interfaces. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_INTERFACES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_INTERFACES_none</configKey>
<description><![CDATA[ This method calls equals(Object) on two references of unrelated interface types, where neither is a subtype of the other, and there are no known non-abstract classes which implement both interfaces. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_TYPES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_TYPES_generic</configKey>
<description><![CDATA[ This method calls equals(Object) on two references of different class types with no common subclasses. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_TYPES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_TYPES_none</configKey>
<description><![CDATA[ This method calls equals(Object) on two references of different class types with no common subclasses. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY_generic</configKey>
<description><![CDATA[ This method uses pointer equality to compare two references that seem to be of different types. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EC_UNRELATED_TYPES_USING_POINTER_EQUALITY_none</configKey>
<description><![CDATA[ This method uses pointer equality to compare two references that seem to be of different types. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_ALWAYS_FALSE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_ALWAYS_FALSE_generic</configKey>
<description><![CDATA[ This class defines an equals method that always returns false. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_ALWAYS_FALSE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_ALWAYS_FALSE_none</configKey>
<description><![CDATA[ This class defines an equals method that always returns false. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_ALWAYS_TRUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_ALWAYS_TRUE_generic</configKey>
<description><![CDATA[ This class defines an equals method that always returns true. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_ALWAYS_TRUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_ALWAYS_TRUE_none</configKey>
<description><![CDATA[ This class defines an equals method that always returns true. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_COMPARING_CLASS_NAMES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_COMPARING_CLASS_NAMES_generic</configKey>
<description><![CDATA[ This method checks to see if two objects are the same class by checking to see if the names of their classes are equal. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_COMPARING_CLASS_NAMES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_COMPARING_CLASS_NAMES_none</configKey>
<description><![CDATA[ This method checks to see if two objects are the same class by checking to see if the names of their classes are equal. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM_generic</configKey>
<description><![CDATA[ This class defines an enumeration, and equality on enumerations are defined using object identity. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_DONT_DEFINE_EQUALS_FOR_ENUM_none</configKey>
<description><![CDATA[ This class defines an enumeration, and equality on enumerations are defined using object identity. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_OTHER_NO_OBJECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_OTHER_NO_OBJECT_generic</configKey>
<description><![CDATA[ This class defines an equals()   method, that doesn't override the normal equals(Object) method   defined in the base java.lang.Object class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_OTHER_NO_OBJECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_OTHER_NO_OBJECT_none</configKey>
<description><![CDATA[ This class defines an equals()   method, that doesn't override the normal equals(Object) method   defined in the base java.lang.Object class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_OTHER_USE_OBJECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_OTHER_USE_OBJECT_generic</configKey>
<description><![CDATA[ This class defines an equals()   method, that doesn't override the normal equals(Object) method   defined in the base java.lang.Object class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_OTHER_USE_OBJECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_OTHER_USE_OBJECT_none</configKey>
<description><![CDATA[ This class defines an equals()   method, that doesn't override the normal equals(Object) method   defined in the base java.lang.Object class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC_generic</configKey>
<description><![CDATA[ This class defines an equals method that overrides an equals method in a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC_none</configKey>
<description><![CDATA[ This class defines an equals method that overrides an equals method in a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_SELF_USE_OBJECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_SELF_USE_OBJECT_generic</configKey>
<description><![CDATA[ This class defines a covariant version of the equals()   method, but inherits the normal equals(Object) method   defined in the base java.lang.Object class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_SELF_USE_OBJECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_SELF_USE_OBJECT_none</configKey>
<description><![CDATA[ This class defines a covariant version of the equals()   method, but inherits the normal equals(Object) method   defined in the base java.lang.Object class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FB_MISSING_EXPECTED_WARNING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FB_MISSING_EXPECTED_WARNING_generic</configKey>
<description><![CDATA[ FindBugs didn't generate a warning that, according to a @ExpectedWarning annotated,             is expected or desired ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FB_MISSING_EXPECTED_WARNING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FB_MISSING_EXPECTED_WARNING_none</configKey>
<description><![CDATA[ FindBugs didn't generate a warning that, according to a @ExpectedWarning annotated,             is expected or desired ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FB_UNEXPECTED_WARNING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FB_UNEXPECTED_WARNING_generic</configKey>
<description><![CDATA[ FindBugs generated a warning that, according to a @NoWarning annotated,             is unexpected or undesired ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FB_UNEXPECTED_WARNING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FB_UNEXPECTED_WARNING_none</configKey>
<description><![CDATA[ FindBugs generated a warning that, according to a @NoWarning annotated,             is unexpected or undesired ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER_generic</configKey>
<description><![CDATA[ This code checks to see if a floating point value is equal to the special     Not A Number value (e.g., if (x == Double.NaN)). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER_none</configKey>
<description><![CDATA[ This code checks to see if a floating point value is equal to the special     Not A Number value (e.g., if (x == Double.NaN)). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FL_MATH_USING_FLOAT_PRECISION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FL_MATH_USING_FLOAT_PRECISION_generic</configKey>
<description><![CDATA[ The method performs math operations using floating point precision. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FL_MATH_USING_FLOAT_PRECISION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FL_MATH_USING_FLOAT_PRECISION_none</configKey>
<description><![CDATA[ The method performs math operations using floating point precision. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_ARG_MISMATCH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_ARG_MISMATCH_generic</configKey>
<description><![CDATA[ A format-string method with a variable number of arguments is called, but the number of arguments passed does not match with the number of % placeholders in the format string. (<i>FindBugs&trade; Deprecated</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_ARG_MISMATCH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_ARG_MISMATCH_none</configKey>
<description><![CDATA[ A format-string method with a variable number of arguments is called, but the number of arguments passed does not match with the number of % placeholders in the format string. (<i>FindBugs&trade; Deprecated</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_ARGUMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_ARGUMENT_generic</configKey>
<description><![CDATA[ The format string placeholder is incompatible with the corresponding argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_ARGUMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_ARGUMENT_none</configKey>
<description><![CDATA[ The format string placeholder is incompatible with the corresponding argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_generic</configKey>
<description><![CDATA[ One of the arguments is incompatible with the corresponding format string specifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_none</configKey>
<description><![CDATA[ One of the arguments is incompatible with the corresponding format string specifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED_generic</configKey>
<description><![CDATA[ A method is called that expects a Java printf format string and a list of arguments. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED_none</configKey>
<description><![CDATA[ A method is called that expects a Java printf format string and a list of arguments. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED_generic</configKey>
<description><![CDATA[ A format-string method with a variable number of arguments is called, but more arguments are passed than are actually used by the format string. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED_none</configKey>
<description><![CDATA[ A format-string method with a variable number of arguments is called, but more arguments are passed than are actually used by the format string. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_ILLEGAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_ILLEGAL_generic</configKey>
<description><![CDATA[ The format string is syntactically invalid, and a runtime exception will occur when this statement is executed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_ILLEGAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_ILLEGAL_none</configKey>
<description><![CDATA[ The format string is syntactically invalid, and a runtime exception will occur when this statement is executed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_MISSING_ARGUMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_MISSING_ARGUMENT_generic</configKey>
<description><![CDATA[ Not enough arguments are passed to satisfy a placeholder in the format string. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_MISSING_ARGUMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_MISSING_ARGUMENT_none</configKey>
<description><![CDATA[ Not enough arguments are passed to satisfy a placeholder in the format string. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT_generic</configKey>
<description><![CDATA[ The format string specifies a relative index to request that the argument for the previous format specifier be reused. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT_none</configKey>
<description><![CDATA[ The format string specifies a relative index to request that the argument for the previous format specifier be reused. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.GC_UNRELATED_TYPES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.GC_UNRELATED_TYPES_generic</configKey>
<description><![CDATA[ This call to a generic collection method contains an argument      with an incompatible class from that of the collection's parameter     (i.e., the type of the argument is neither a supertype nor a subtype         of the corresponding generic type argument). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.GC_UNRELATED_TYPES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.GC_UNRELATED_TYPES_none</configKey>
<description><![CDATA[ This call to a generic collection method contains an argument      with an incompatible class from that of the collection's parameter     (i.e., the type of the argument is neither a supertype nor a subtype         of the corresponding generic type argument). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS_generic</configKey>
<description><![CDATA[ A method, field or class declares a generic signature where a non-hashable class is used in context where a hashable class is required. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS_none</configKey>
<description><![CDATA[ A method, field or class declares a generic signature where a non-hashable class is used in context where a hashable class is required. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_USE_OF_UNHASHABLE_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_USE_OF_UNHASHABLE_CLASS_generic</configKey>
<description><![CDATA[ A class defines an equals(Object)  method but not a hashCode() method, and thus doesn't fulfill the requirement that equal objects have equal hashCodes. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HE_USE_OF_UNHASHABLE_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HE_USE_OF_UNHASHABLE_CLASS_none</configKey>
<description><![CDATA[ A class defines an equals(Object)  method but not a hashCode() method, and thus doesn't fulfill the requirement that equal objects have equal hashCodes. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INT_2_LONG_AS_INSTANT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INT_2_LONG_AS_INSTANT_generic</configKey>
<description><![CDATA[ This code converts a 32-bit int value to a 64-bit long value, and then passes that value for a method parameter that requires an absolute time value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INT_2_LONG_AS_INSTANT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INT_2_LONG_AS_INSTANT_none</configKey>
<description><![CDATA[ This code converts a 32-bit int value to a 64-bit long value, and then passes that value for a method parameter that requires an absolute time value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL_generic</configKey>
<description><![CDATA[ This code converts an integral value (e.g., int or long) to a double precision floating point number and then passing the result to the Math.ceil() function, which rounds a double to the next higher integer value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL_none</configKey>
<description><![CDATA[ This code converts an integral value (e.g., int or long) to a double precision floating point number and then passing the result to the Math.ceil() function, which rounds a double to the next higher integer value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND_generic</configKey>
<description><![CDATA[ This code converts an int value to a float precision floating point number and then passing the result to the Math.round() function, which returns the int/long closest to the argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND_none</configKey>
<description><![CDATA[ This code converts an int value to a float precision floating point number and then passing the result to the Math.round() function, which returns the int/long closest to the argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD_generic</configKey>
<description><![CDATA[ A JUnit assertion is performed in a run method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD_none</configKey>
<description><![CDATA[ A JUnit assertion is performed in a run method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_BAD_SUITE_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_BAD_SUITE_METHOD_generic</configKey>
<description><![CDATA[ Class is a JUnit TestCase and defines a suite() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_BAD_SUITE_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_BAD_SUITE_METHOD_none</configKey>
<description><![CDATA[ Class is a JUnit TestCase and defines a suite() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_NO_TESTS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_NO_TESTS_generic</configKey>
<description><![CDATA[ Class is a JUnit TestCase but has not implemented any test methods ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_NO_TESTS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_NO_TESTS_none</configKey>
<description><![CDATA[ Class is a JUnit TestCase but has not implemented any test methods ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_SETUP_NO_SUPER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_SETUP_NO_SUPER_generic</configKey>
<description><![CDATA[ Class is a JUnit TestCase and implements the setUp method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_SETUP_NO_SUPER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_SETUP_NO_SUPER_none</configKey>
<description><![CDATA[ Class is a JUnit TestCase and implements the setUp method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_SUITE_NOT_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_SUITE_NOT_STATIC_generic</configKey>
<description><![CDATA[ Class is a JUnit TestCase and implements the suite() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_SUITE_NOT_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_SUITE_NOT_STATIC_none</configKey>
<description><![CDATA[ Class is a JUnit TestCase and implements the suite() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_TEARDOWN_NO_SUPER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_TEARDOWN_NO_SUPER_generic</configKey>
<description><![CDATA[ Class is a JUnit TestCase and implements the tearDown method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IJU_TEARDOWN_NO_SUPER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IJU_TEARDOWN_NO_SUPER_none</configKey>
<description><![CDATA[ Class is a JUnit TestCase and implements the tearDown method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IL_CONTAINER_ADDED_TO_ITSELF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IL_CONTAINER_ADDED_TO_ITSELF_generic</configKey>
<description><![CDATA[ A collection is added to itself. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IL_CONTAINER_ADDED_TO_ITSELF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IL_CONTAINER_ADDED_TO_ITSELF_none</configKey>
<description><![CDATA[ A collection is added to itself. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IL_INFINITE_LOOP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IL_INFINITE_LOOP_generic</configKey>
<description><![CDATA[ This loop doesn't seem to have a way to terminate (other than by perhaps throwing an exception). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IL_INFINITE_LOOP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IL_INFINITE_LOOP_none</configKey>
<description><![CDATA[ This loop doesn't seem to have a way to terminate (other than by perhaps throwing an exception). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IL_INFINITE_RECURSIVE_LOOP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IL_INFINITE_RECURSIVE_LOOP_generic</configKey>
<description><![CDATA[ This method unconditionally invokes itself. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IL_INFINITE_RECURSIVE_LOOP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IL_INFINITE_RECURSIVE_LOOP_none</configKey>
<description><![CDATA[ This method unconditionally invokes itself. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IM_MULTIPLYING_RESULT_OF_IREM_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IM_MULTIPLYING_RESULT_OF_IREM_generic</configKey>
<description><![CDATA[ The code multiplies the result of an integer remaining by an integer constant. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IM_MULTIPLYING_RESULT_OF_IREM_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IM_MULTIPLYING_RESULT_OF_IREM_none</configKey>
<description><![CDATA[ The code multiplies the result of an integer remaining by an integer constant. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_INT_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_INT_VALUE_generic</configKey>
<description><![CDATA[ This code compares an int value with a long constant that is outside the range of values that can be represented as an int value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_INT_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_INT_VALUE_none</configKey>
<description><![CDATA[ This code compares an int value with a long constant that is outside the range of values that can be represented as an int value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE_generic</configKey>
<description><![CDATA[ This code compares a value that is guaranteed to be non-negative with a negative constant. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE_none</configKey>
<description><![CDATA[ This code compares a value that is guaranteed to be non-negative with a negative constant. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE_generic</configKey>
<description><![CDATA[ Signed bytes can only have a value in the range -128 to 127. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_COMPARISON_WITH_SIGNED_BYTE_none</configKey>
<description><![CDATA[ Signed bytes can only have a value in the range -128 to 127. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM_generic</configKey>
<description><![CDATA[ This code opens a file in append mode and then wraps the result in an object output stream. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IO_APPENDING_TO_OBJECT_OUTPUT_STREAM_none</configKey>
<description><![CDATA[ This code opens a file in append mode and then wraps the result in an object output stream. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN_generic</configKey>
<description><![CDATA[ The initial value of this parameter is ignored, and the parameter is overwritten here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN_none</configKey>
<description><![CDATA[ The initial value of this parameter is ignored, and the parameter is overwritten here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MF_CLASS_MASKS_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MF_CLASS_MASKS_FIELD_generic</configKey>
<description><![CDATA[ This class defines a field with the same name as a visible instance field in a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MF_CLASS_MASKS_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MF_CLASS_MASKS_FIELD_none</configKey>
<description><![CDATA[ This class defines a field with the same name as a visible instance field in a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MF_METHOD_MASKS_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MF_METHOD_MASKS_FIELD_generic</configKey>
<description><![CDATA[ This method defines a local variable with the same name as a field in this class or a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MF_METHOD_MASKS_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MF_METHOD_MASKS_FIELD_none</configKey>
<description><![CDATA[ This method defines a local variable with the same name as a field in this class or a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_NULL_INSTANCEOF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_NULL_INSTANCEOF_generic</configKey>
<description><![CDATA[ This instanceof test will always return false, since the value being checked is guaranteed to be null. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_NULL_INSTANCEOF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_NULL_INSTANCEOF_none</configKey>
<description><![CDATA[ This instanceof test will always return false, since the value being checked is guaranteed to be null. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_ALWAYS_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_ALWAYS_NULL_generic</configKey>
<description><![CDATA[ A null pointer is dereferenced here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_ALWAYS_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_ALWAYS_NULL_none</configKey>
<description><![CDATA[ A null pointer is dereferenced here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_ALWAYS_NULL_EXCEPTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_ALWAYS_NULL_EXCEPTION_generic</configKey>
<description><![CDATA[ A pointer which is null on an exception path is dereferenced here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_ALWAYS_NULL_EXCEPTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_ALWAYS_NULL_EXCEPTION_none</configKey>
<description><![CDATA[ A pointer which is null on an exception path is dereferenced here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_ARGUMENT_MIGHT_BE_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_ARGUMENT_MIGHT_BE_NULL_generic</configKey>
<description><![CDATA[ A parameter to this method has been identified as a value that should     always be checked to see whether or not it is null, but it is being dereferenced     without a preceding null check. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_ARGUMENT_MIGHT_BE_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_ARGUMENT_MIGHT_BE_NULL_none</configKey>
<description><![CDATA[ A parameter to this method has been identified as a value that should     always be checked to see whether or not it is null, but it is being dereferenced     without a preceding null check. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_CLOSING_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_CLOSING_NULL_generic</configKey>
<description><![CDATA[ close() is being invoked on a value that is always null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_CLOSING_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_CLOSING_NULL_none</configKey>
<description><![CDATA[ close() is being invoked on a value that is always null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_generic</configKey>
<description><![CDATA[ There is a statement or branch that if executed guarantees that               a value is null at this point, and that               value that is guaranteed to be dereferenced               (except on forward paths involving runtime exceptions). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_none</configKey>
<description><![CDATA[ There is a statement or branch that if executed guarantees that               a value is null at this point, and that               value that is guaranteed to be dereferenced               (except on forward paths involving runtime exceptions). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH_generic</configKey>
<description><![CDATA[ There is a statement or branch on an exception path                 that if executed guarantees that               a value is null at this point, and that               value that is guaranteed to be dereferenced               (except on forward paths involving runtime exceptions). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH_none</configKey>
<description><![CDATA[ There is a statement or branch on an exception path                 that if executed guarantees that               a value is null at this point, and that               value that is guaranteed to be dereferenced               (except on forward paths involving runtime exceptions). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_generic</configKey>
<description><![CDATA[ The field is marked as nonnull, but isn't written to by the constructor. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_none</configKey>
<description><![CDATA[ The field is marked as nonnull, but isn't written to by the constructor. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NONNULL_PARAM_VIOLATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NONNULL_PARAM_VIOLATION_generic</configKey>
<description><![CDATA[ This method passes a null value as the parameter of a method which     must be nonnull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NONNULL_PARAM_VIOLATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NONNULL_PARAM_VIOLATION_none</configKey>
<description><![CDATA[ This method passes a null value as the parameter of a method which     must be nonnull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NONNULL_RETURN_VIOLATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NONNULL_RETURN_VIOLATION_generic</configKey>
<description><![CDATA[ This method may return a null value, but the method (or a superclass method       which it overrides) is declared to return @NonNull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NONNULL_RETURN_VIOLATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NONNULL_RETURN_VIOLATION_none</configKey>
<description><![CDATA[ This method may return a null value, but the method (or a superclass method       which it overrides) is declared to return @NonNull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_INSTANCEOF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_INSTANCEOF_generic</configKey>
<description><![CDATA[ This instanceof test will always return false, since the value being checked is guaranteed to be null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_INSTANCEOF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_INSTANCEOF_none</configKey>
<description><![CDATA[ This instanceof test will always return false, since the value being checked is guaranteed to be null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_generic</configKey>
<description><![CDATA[ There is a branch of statement that, <em>if executed,</em>  guarantees that a null value will be dereferenced, which would generate a NullPointerException when the code is executed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_none</configKey>
<description><![CDATA[ There is a branch of statement that, <em>if executed,</em>  guarantees that a null value will be dereferenced, which would generate a NullPointerException when the code is executed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_EXCEPTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_EXCEPTION_generic</configKey>
<description><![CDATA[ A reference value which is null on some exception control path is dereferenced here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_EXCEPTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_EXCEPTION_none</configKey>
<description><![CDATA[ A reference value which is null on some exception control path is dereferenced here. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_generic</configKey>
<description><![CDATA[ This method call passes a null value for a nonnull method parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_none</configKey>
<description><![CDATA[ This method call passes a null value for a nonnull method parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS_generic</configKey>
<description><![CDATA[ A possibly-null value is passed at a call site where all known       target methods require the parameter to be nonnull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS_none</configKey>
<description><![CDATA[ A possibly-null value is passed at a call site where all known       target methods require the parameter to be nonnull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_NONVIRTUAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_NONVIRTUAL_generic</configKey>
<description><![CDATA[ A possibly-null value is passed to a nonnull method parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_NONVIRTUAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_PARAM_DEREF_NONVIRTUAL_none</configKey>
<description><![CDATA[ A possibly-null value is passed to a nonnull method parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_STORE_INTO_NONNULL_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_STORE_INTO_NONNULL_FIELD_generic</configKey>
<description><![CDATA[ A value that could be null is stored into a field that has been annotated as NonNull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_STORE_INTO_NONNULL_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_STORE_INTO_NONNULL_FIELD_none</configKey>
<description><![CDATA[ A value that could be null is stored into a field that has been annotated as NonNull. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_UNWRITTEN_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_UNWRITTEN_FIELD_generic</configKey>
<description><![CDATA[ The program is dereferencing a field that does not seem to ever have a non-null value written to it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_UNWRITTEN_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_UNWRITTEN_FIELD_none</configKey>
<description><![CDATA[ The program is dereferencing a field that does not seem to ever have a non-null value written to it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_BAD_EQUAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_BAD_EQUAL_generic</configKey>
<description><![CDATA[ This class defines a method equal(Object). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_BAD_EQUAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_BAD_EQUAL_none</configKey>
<description><![CDATA[ This class defines a method equal(Object). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_LCASE_HASHCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_LCASE_HASHCODE_generic</configKey>
<description><![CDATA[ This class defines a method called hashcode(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_LCASE_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_LCASE_HASHCODE_none</configKey>
<description><![CDATA[ This class defines a method called hashcode(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_LCASE_TOSTRING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_LCASE_TOSTRING_generic</configKey>
<description><![CDATA[ This class defines a method called tostring(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_LCASE_TOSTRING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_LCASE_TOSTRING_none</configKey>
<description><![CDATA[ This class defines a method called tostring(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_METHOD_CONSTRUCTOR_CONFUSION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_METHOD_CONSTRUCTOR_CONFUSION_generic</configKey>
<description><![CDATA[ This regular method has the same name as the class it is defined in. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_METHOD_CONSTRUCTOR_CONFUSION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_METHOD_CONSTRUCTOR_CONFUSION_none</configKey>
<description><![CDATA[ This regular method has the same name as the class it is defined in. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_VERY_CONFUSING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_VERY_CONFUSING_generic</configKey>
<description><![CDATA[ The referenced methods have names that differ only by capitalization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_VERY_CONFUSING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_VERY_CONFUSING_none</configKey>
<description><![CDATA[ The referenced methods have names that differ only by capitalization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_WRONG_PACKAGE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_WRONG_PACKAGE_generic</configKey>
<description><![CDATA[ The method in the subclass doesn't override a similar method in a superclass because the type of a parameter doesn't exactly match the type of the corresponding parameter in the superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NM_WRONG_PACKAGE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NM_WRONG_PACKAGE_none</configKey>
<description><![CDATA[ The method in the subclass doesn't override a similar method in a superclass because the type of a parameter doesn't exactly match the type of the corresponding parameter in the superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT_generic</configKey>
<description><![CDATA[ This method assigns a literal boolean value (true or false) to a boolean variable inside       an if or while expression. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT_none</configKey>
<description><![CDATA[ This method assigns a literal boolean value (true or false) to a boolean variable inside       an if or while expression. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RC_REF_COMPARISON_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RC_REF_COMPARISON_generic</configKey>
<description><![CDATA[ This method compares two reference values using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RC_REF_COMPARISON_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RC_REF_COMPARISON_none</configKey>
<description><![CDATA[ This method compares two reference values using the == or != operator, where the correct way to compare instances of this type is generally with the equals() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE_generic</configKey>
<description><![CDATA[ A value is checked here to see whether it is null, but this value can't be null because it was previously dereferenced and if it were null a null pointer exception would have occurred at the earlier dereference. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE_none</configKey>
<description><![CDATA[ A value is checked here to see whether it is null, but this value can't be null because it was previously dereferenced and if it were null a null pointer exception would have occurred at the earlier dereference. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION_generic</configKey>
<description><![CDATA[ The code here uses a regular expression that is invalid according to the syntax for regular expressions. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION_none</configKey>
<description><![CDATA[ The code here uses a regular expression that is invalid according to the syntax for regular expressions. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION_generic</configKey>
<description><![CDATA[ The code here uses File.separator where a regular expression is required. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION_none</configKey>
<description><![CDATA[ The code here uses File.separator where a regular expression is required. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RE_POSSIBLE_UNINTENDED_PATTERN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RE_POSSIBLE_UNINTENDED_PATTERN_generic</configKey>
<description><![CDATA[ A String function is being invoked and "." is being passed to a parameter that takes a regular expression as an argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RE_POSSIBLE_UNINTENDED_PATTERN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RE_POSSIBLE_UNINTENDED_PATTERN_none</configKey>
<description><![CDATA[ A String function is being invoked and "." is being passed to a parameter that takes a regular expression as an argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_01_TO_INT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_01_TO_INT_generic</configKey>
<description><![CDATA[ A random value from 0 to 1 is being coerced to the integer value 0. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_01_TO_INT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_01_TO_INT_none</configKey>
<description><![CDATA[ A random value from 0 to 1 is being coerced to the integer value 0. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_HASHCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_HASHCODE_generic</configKey>
<description><![CDATA[ This code generates a hashcode and then computes the absolute value of that hashcode. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_HASHCODE_none</configKey>
<description><![CDATA[ This code generates a hashcode and then computes the absolute value of that hashcode. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT_generic</configKey>
<description><![CDATA[ This code generates a random signed integer and then computes the absolute value of that random integer. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_ABSOLUTE_VALUE_OF_RANDOM_INT_none</configKey>
<description><![CDATA[ This code generates a random signed integer and then computes the absolute value of that random integer. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE_generic</configKey>
<description><![CDATA[ This code invoked a compareTo or compare method, and checks to see if the return value is a specific value, such as 1 or -1. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE_none</configKey>
<description><![CDATA[ This code invoked a compareTo or compare method, and checks to see if the return value is a specific value, such as 1 or -1. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_EXCEPTION_NOT_THROWN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_EXCEPTION_NOT_THROWN_generic</configKey>
<description><![CDATA[ This code creates an exception (or error) object, but doesn't do anything with it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_EXCEPTION_NOT_THROWN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_EXCEPTION_NOT_THROWN_none</configKey>
<description><![CDATA[ This code creates an exception (or error) object, but doesn't do anything with it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_generic</configKey>
<description><![CDATA[ The return value of this method should be checked. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_none</configKey>
<description><![CDATA[ The return value of this method should be checked. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED2_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED2_generic</configKey>
<description><![CDATA[ The return value of this method should be checked. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED2_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED2_none</configKey>
<description><![CDATA[ The return value of this method should be checked. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RPC_REPEATED_CONDITIONAL_TEST_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RPC_REPEATED_CONDITIONAL_TEST_generic</configKey>
<description><![CDATA[ The code contains a conditional test is performed twice, one right after the other (e.g., x == 0 || x == 0). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RPC_REPEATED_CONDITIONAL_TEST_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RPC_REPEATED_CONDITIONAL_TEST_none</configKey>
<description><![CDATA[ The code contains a conditional test is performed twice, one right after the other (e.g., x == 0 || x == 0). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_SELF_ASSIGNMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_SELF_ASSIGNMENT_generic</configKey>
<description><![CDATA[ This method contains a self assignment of a field; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_SELF_ASSIGNMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_SELF_ASSIGNMENT_none</configKey>
<description><![CDATA[ This method contains a self assignment of a field; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_SELF_COMPARISON_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_SELF_COMPARISON_generic</configKey>
<description><![CDATA[ This method compares a field with itself, and may indicate a typo or a logic error. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_SELF_COMPARISON_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_SELF_COMPARISON_none</configKey>
<description><![CDATA[ This method compares a field with itself, and may indicate a typo or a logic error. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_SELF_COMPUTATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_SELF_COMPUTATION_generic</configKey>
<description><![CDATA[ This method performs a nonsensical computation of a field with another reference to the same field (e.g., x&amp;x or x-x). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_SELF_COMPUTATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_SELF_COMPUTATION_none</configKey>
<description><![CDATA[ This method performs a nonsensical computation of a field with another reference to the same field (e.g., x&amp;x or x-x). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD_generic</configKey>
<description><![CDATA[ This method contains a self assignment of a local variable, and there is a field with an identical name. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD_none</configKey>
<description><![CDATA[ This method contains a self assignment of a local variable, and there is a field with an identical name. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPARISON_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPARISON_generic</configKey>
<description><![CDATA[ This method compares a local variable with itself, and may indicate a typo or a logic error. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPARISON_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPARISON_none</configKey>
<description><![CDATA[ This method compares a local variable with itself, and may indicate a typo or a logic error. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPUTATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPUTATION_generic</configKey>
<description><![CDATA[ This method performs a nonsensical computation of a local variable with another reference to the same variable (e.g., x&amp;x or x-x). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPUTATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_COMPUTATION_none</configKey>
<description><![CDATA[ This method performs a nonsensical computation of a local variable with another reference to the same variable (e.g., x&amp;x or x-x). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_generic</configKey>
<description><![CDATA[ A value stored in the previous switch case is overwritten here due to a switch fall through. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_none</configKey>
<description><![CDATA[ A value stored in the previous switch case is overwritten here due to a switch fall through. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW_generic</configKey>
<description><![CDATA[ A value stored in the previous switch case is ignored here due to a switch fall through to a place where     an exception is thrown. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW_none</configKey>
<description><![CDATA[ A value stored in the previous switch case is ignored here due to a switch fall through to a place where     an exception is thrown. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_THREADLOCAL_DEADLY_EMBRACE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_THREADLOCAL_DEADLY_EMBRACE_generic</configKey>
<description><![CDATA[ This class is an inner class, but should probably be a static inner class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_THREADLOCAL_DEADLY_EMBRACE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_THREADLOCAL_DEADLY_EMBRACE_none</configKey>
<description><![CDATA[ This class is an inner class, but should probably be a static inner class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIO_SUPERFLUOUS_INSTANCEOF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIO_SUPERFLUOUS_INSTANCEOF_generic</configKey>
<description><![CDATA[ Type check performed using the instanceof operator where it can be statically determined whether the object is of the type requested. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIO_SUPERFLUOUS_INSTANCEOF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIO_SUPERFLUOUS_INSTANCEOF_none</configKey>
<description><![CDATA[ Type check performed using the instanceof operator where it can be statically determined whether the object is of the type requested. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BRSA_BAD_RESULTSET_ACCESS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BRSA_BAD_RESULTSET_ACCESS_generic</configKey>
<description><![CDATA[ A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BRSA_BAD_RESULTSET_ACCESS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BRSA_BAD_RESULTSET_ACCESS_none</configKey>
<description><![CDATA[ A call to getXXX or updateXXX methods of a result set was made where the field index is 0. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_BAD_PREPARED_STATEMENT_ACCESS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_BAD_PREPARED_STATEMENT_ACCESS_generic</configKey>
<description><![CDATA[ A call to a setXXX method of a prepared statement was made where the parameter index is 0. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_BAD_PREPARED_STATEMENT_ACCESS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_BAD_PREPARED_STATEMENT_ACCESS_none</configKey>
<description><![CDATA[ A call to a setXXX method of a prepared statement was made where the parameter index is 0. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_BAD_RESULTSET_ACCESS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_BAD_RESULTSET_ACCESS_generic</configKey>
<description><![CDATA[ A call to getXXX or updateXXX methods of a result set was made where the field index is 0. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_BAD_RESULTSET_ACCESS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_BAD_RESULTSET_ACCESS_none</configKey>
<description><![CDATA[ A call to getXXX or updateXXX methods of a result set was made where the field index is 0. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STI_INTERRUPTED_ON_CURRENTTHREAD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STI_INTERRUPTED_ON_CURRENTTHREAD_generic</configKey>
<description><![CDATA[ This method invokes the Thread.currentThread() call, just to call the interrupted() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STI_INTERRUPTED_ON_CURRENTTHREAD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STI_INTERRUPTED_ON_CURRENTTHREAD_none</configKey>
<description><![CDATA[ This method invokes the Thread.currentThread() call, just to call the interrupted() method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD_generic</configKey>
<description><![CDATA[ This method invokes the Thread.interrupted() method on a Thread object that appears to be a Thread object that is not the current thread. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STI_INTERRUPTED_ON_UNKNOWNTHREAD_none</configKey>
<description><![CDATA[ This method invokes the Thread.interrupted() method on a Thread object that appears to be a Thread object that is not the current thread. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_METHOD_MUST_BE_PRIVATE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_METHOD_MUST_BE_PRIVATE_generic</configKey>
<description><![CDATA[ This class implements the Serializable interface, and defines a method   for custom serialization/deserialization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_METHOD_MUST_BE_PRIVATE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_METHOD_MUST_BE_PRIVATE_none</configKey>
<description><![CDATA[ This class implements the Serializable interface, and defines a method   for custom serialization/deserialization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_READ_RESOLVE_IS_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_READ_RESOLVE_IS_STATIC_generic</configKey>
<description><![CDATA[ In order for the readResolve method to be recognized by the serialization mechanism, it must not be declared as a static method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_READ_RESOLVE_IS_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_READ_RESOLVE_IS_STATIC_none</configKey>
<description><![CDATA[ In order for the readResolve method to be recognized by the serialization mechanism, it must not be declared as a static method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED_generic</configKey>
<description><![CDATA[ A value specified as carrying a type qualifier annotation is         consumed in a location or locations requiring that the value not         carry that annotation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED_none</configKey>
<description><![CDATA[ A value specified as carrying a type qualifier annotation is         consumed in a location or locations requiring that the value not         carry that annotation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS_generic</configKey>
<description><![CDATA[ A value specified as carrying a type qualifier annotation is         compared with a value that doesn't ever carry that qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS_none</configKey>
<description><![CDATA[ A value specified as carrying a type qualifier annotation is         compared with a value that doesn't ever carry that qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK_generic</configKey>
<description><![CDATA[ A value that is annotated as possibility not being an instance of     the values denoted by the type qualifier, and the value is guaranteed to be used     in a way that requires values denoted by that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK_none</configKey>
<description><![CDATA[ A value that is annotated as possibility not being an instance of     the values denoted by the type qualifier, and the value is guaranteed to be used     in a way that requires values denoted by that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK_generic</configKey>
<description><![CDATA[ A value that is annotated as possibility being an instance of     the values denoted by the type qualifier, and the value is guaranteed to be used     in a way that prohibits values denoted by that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK_none</configKey>
<description><![CDATA[ A value that is annotated as possibility being an instance of     the values denoted by the type qualifier, and the value is guaranteed to be used     in a way that prohibits values denoted by that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED_generic</configKey>
<description><![CDATA[ A value specified as not carrying a type qualifier annotation is guaranteed         to be consumed in a location or locations requiring that the value does         carry that annotation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED_none</configKey>
<description><![CDATA[ A value specified as not carrying a type qualifier annotation is guaranteed         to be consumed in a location or locations requiring that the value does         carry that annotation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS_generic</configKey>
<description><![CDATA[ This anonymous class defined a method that is not directly invoked and does not override a method in a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS_none</configKey>
<description><![CDATA[ This anonymous class defined a method that is not directly invoked and does not override a method in a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UR_UNINIT_READ_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UR_UNINIT_READ_generic</configKey>
<description><![CDATA[ This constructor reads a field which has not yet been assigned a value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UR_UNINIT_READ_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UR_UNINIT_READ_none</configKey>
<description><![CDATA[ This constructor reads a field which has not yet been assigned a value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR_generic</configKey>
<description><![CDATA[ This method is invoked in the constructor of the superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR_none</configKey>
<description><![CDATA[ This method is invoked in the constructor of the superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY_generic</configKey>
<description><![CDATA[ The code invokes toString on an (anonymous) array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY_none</configKey>
<description><![CDATA[ The code invokes toString on an (anonymous) array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ARRAY_generic</configKey>
<description><![CDATA[ The code invokes toString on an array, which will generate a fairly useless result such as [C@16f0472. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_INVOKING_TOSTRING_ON_ARRAY_none</configKey>
<description><![CDATA[ The code invokes toString on an array, which will generate a fairly useless result such as [C@16f0472. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY_generic</configKey>
<description><![CDATA[ One of the arguments being formatted with a format string is an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY_none</configKey>
<description><![CDATA[ One of the arguments being formatted with a format string is an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_NULL_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_NULL_FIELD_generic</configKey>
<description><![CDATA[ All writes to this field are of the constant value null, and thus all reads of the field will return null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_NULL_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_NULL_FIELD_none</configKey>
<description><![CDATA[ All writes to this field are of the constant value null, and thus all reads of the field will return null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_UNWRITTEN_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_UNWRITTEN_FIELD_generic</configKey>
<description><![CDATA[ This field is never written. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_UNWRITTEN_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_UNWRITTEN_FIELD_none</configKey>
<description><![CDATA[ This field is never written. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG_generic</configKey>
<description><![CDATA[ This code passes a primitive array to a function that takes a variable number of object arguments. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG_none</configKey>
<description><![CDATA[ This code passes a primitive array to a function that takes a variable number of object arguments. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VR_UNRESOLVABLE_REFERENCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VR_UNRESOLVABLE_REFERENCE_generic</configKey>
<description><![CDATA[ This class makes a reference to a class or method that can not be     resolved using against the libraries it is being analyzed with. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VR_UNRESOLVABLE_REFERENCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VR_UNRESOLVABLE_REFERENCE_none</configKey>
<description><![CDATA[ This class makes a reference to a class or method that can not be     resolved using against the libraries it is being analyzed with. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE_generic</configKey>
<description><![CDATA[ OpenJDK introduces a potential incompatibility. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE_none</configKey>
<description><![CDATA[ OpenJDK introduces a potential incompatibility. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_generic</configKey>
<description><![CDATA[ This method may fail to clean up (close, dispose of) a stream,           database object, or other           resource requiring an explicit cleanup operation. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_none</configKey>
<description><![CDATA[ This method may fail to clean up (close, dispose of) a stream,           database object, or other           resource requiring an explicit cleanup operation. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE_generic</configKey>
<description><![CDATA[ This method may fail to clean up (close, dispose of) a stream,           database object, or other           resource requiring an explicit cleanup operation. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE_none</configKey>
<description><![CDATA[ This method may fail to clean up (close, dispose of) a stream,           database object, or other           resource requiring an explicit cleanup operation. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SKIPPED_CLASS_TOO_BIG_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SKIPPED_CLASS_TOO_BIG_generic</configKey>
<description><![CDATA[ This class is bigger than can be effectively handled, and was not fully analyzed for errors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SKIPPED_CLASS_TOO_BIG_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SKIPPED_CLASS_TOO_BIG_none</configKey>
<description><![CDATA[ This class is bigger than can be effectively handled, and was not fully analyzed for errors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING_generic</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING_none</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING1_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING1_generic</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING1_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING1_none</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING2_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING2_generic</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING2_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING2_none</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING3_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING3_generic</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TESTING3_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TESTING3_none</configKey>
<description><![CDATA[ This bug pattern is only generated by new, incompletely implemented bug detectors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UNKNOWN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UNKNOWN_generic</configKey>
<description><![CDATA[ A warning was recorded, but findbugs can't find the description of this bug pattern and so can't describe it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UNKNOWN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UNKNOWN_none</configKey>
<description><![CDATA[ A warning was recorded, but findbugs can't find the description of this bug pattern and so can't describe it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_CONVERT_CASE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_CONVERT_CASE_generic</configKey>
<description><![CDATA[ A String is being converted to upper or lowercase, using the platform's default encoding. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_CONVERT_CASE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_CONVERT_CASE_none</configKey>
<description><![CDATA[ A String is being converted to upper or lowercase, using the platform's default encoding. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_DEFAULT_ENCODING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_DEFAULT_ENCODING_generic</configKey>
<description><![CDATA[ Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_DEFAULT_ENCODING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_DEFAULT_ENCODING_none</configKey>
<description><![CDATA[ Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED_generic</configKey>
<description><![CDATA[ This code creates a classloader,  which needs permission if a security manage is installed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED_none</configKey>
<description><![CDATA[ This code creates a classloader,  which needs permission if a security manage is installed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEGED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEGED_generic</configKey>
<description><![CDATA[ This code invokes a method that requires a security permission check. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEGED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DP_DO_INSIDE_DO_PRIVILEGED_none</configKey>
<description><![CDATA[ This code invokes a method that requires a security permission check. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EI_EXPOSE_REP2_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EI_EXPOSE_REP2_generic</configKey>
<description><![CDATA[ This code stores a reference to an externally mutable object into the   internal representation of the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EI_EXPOSE_REP2_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EI_EXPOSE_REP2_none</configKey>
<description><![CDATA[ This code stores a reference to an externally mutable object into the   internal representation of the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EI_EXPOSE_REP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EI_EXPOSE_REP_generic</configKey>
<description><![CDATA[ Returning a reference to a mutable object value stored in one of the object's fields   exposes the internal representation of the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EI_EXPOSE_REP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EI_EXPOSE_REP_none</configKey>
<description><![CDATA[ Returning a reference to a mutable object value stored in one of the object's fields   exposes the internal representation of the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_PUBLIC_SHOULD_BE_PROTECTED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_PUBLIC_SHOULD_BE_PROTECTED_generic</configKey>
<description><![CDATA[ A class's finalize() method should have protected access,    not public. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FI_PUBLIC_SHOULD_BE_PROTECTED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FI_PUBLIC_SHOULD_BE_PROTECTED_none</configKey>
<description><![CDATA[ A class's finalize() method should have protected access,    not public. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EI_EXPOSE_STATIC_REP2_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EI_EXPOSE_STATIC_REP2_generic</configKey>
<description><![CDATA[ This code stores a reference to an externally mutable object into a static    field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EI_EXPOSE_STATIC_REP2_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EI_EXPOSE_STATIC_REP2_none</configKey>
<description><![CDATA[ This code stores a reference to an externally mutable object into a static    field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_CANNOT_BE_FINAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_CANNOT_BE_FINAL_generic</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_CANNOT_BE_FINAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_CANNOT_BE_FINAL_none</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_EXPOSE_REP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_EXPOSE_REP_generic</configKey>
<description><![CDATA[ A public static method returns a reference to    an array that is part of the static state of the class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_EXPOSE_REP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_EXPOSE_REP_none</configKey>
<description><![CDATA[ A public static method returns a reference to    an array that is part of the static state of the class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_FINAL_PKGPROTECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_FINAL_PKGPROTECT_none</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_MUTABLE_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_MUTABLE_ARRAY_generic</configKey>
<description><![CDATA[ A final static field references an array    and can be accessed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_MUTABLE_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_MUTABLE_ARRAY_none</configKey>
<description><![CDATA[ A final static field references an array    and can be accessed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_MUTABLE_HASHTABLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_MUTABLE_HASHTABLE_generic</configKey>
<description><![CDATA[ A final static field references a Hashtable    and can be accessed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_MUTABLE_HASHTABLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_MUTABLE_HASHTABLE_none</configKey>
<description><![CDATA[ A final static field references a Hashtable    and can be accessed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_OOI_PKGPROTECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_OOI_PKGPROTECT_generic</configKey>
<description><![CDATA[ A final static field that is defined in an interface references a mutable    object such as an array or hashtable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_OOI_PKGPROTECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_OOI_PKGPROTECT_none</configKey>
<description><![CDATA[ A final static field that is defined in an interface references a mutable    object such as an array or hashtable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_PKGPROTECT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_PKGPROTECT_generic</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or    by accident. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_PKGPROTECT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_PKGPROTECT_none</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or    by accident. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_SHOULD_BE_FINAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_SHOULD_BE_FINAL_generic</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_SHOULD_BE_FINAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_SHOULD_BE_FINAL_none</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or         by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL_generic</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MS_SHOULD_BE_REFACTORED_TO_BE_FINAL_none</configKey>
<description><![CDATA[ A mutable static field could be changed by malicious code or by accident from another package. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION_generic</configKey>
<description><![CDATA[ This code contains a sequence of calls to a concurrent  abstraction             (such as a concurrent hash map). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION_none</configKey>
<description><![CDATA[ This code contains a sequence of calls to a concurrent  abstraction             (such as a concurrent hash map). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DC_DOUBLECHECK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DC_DOUBLECHECK_generic</configKey>
<description><![CDATA[ This method may contain an instance of double-checked locking. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DC_DOUBLECHECK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DC_DOUBLECHECK_none</configKey>
<description><![CDATA[ This method may contain an instance of double-checked locking. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOOLEAN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOOLEAN_generic</configKey>
<description><![CDATA[ The code synchronizes on a boxed primitive constant, such as an Boolean. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOOLEAN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOOLEAN_none</configKey>
<description><![CDATA[ The code synchronizes on a boxed primitive constant, such as an Boolean. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE_generic</configKey>
<description><![CDATA[ The code synchronizes on a boxed primitive constant, such as an Integer. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE_none</configKey>
<description><![CDATA[ The code synchronizes on a boxed primitive constant, such as an Integer. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT_generic</configKey>
<description><![CDATA[ The code synchronizes on interned String. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_SHARED_CONSTANT_none</configKey>
<description><![CDATA[ The code synchronizes on interned String. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE_generic</configKey>
<description><![CDATA[ The code synchronizes on an apparently unshared boxed primitive, such as an Integer. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE_none</configKey>
<description><![CDATA[ The code synchronizes on an apparently unshared boxed primitive, such as an Integer. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_MONITOR_WAIT_ON_CONDITION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_MONITOR_WAIT_ON_CONDITION_generic</configKey>
<description><![CDATA[ This method calls wait() on a       java.util.concurrent.locks.Condition object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_MONITOR_WAIT_ON_CONDITION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_MONITOR_WAIT_ON_CONDITION_none</configKey>
<description><![CDATA[ This method calls wait() on a       java.util.concurrent.locks.Condition object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_USELESS_THREAD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_USELESS_THREAD_generic</configKey>
<description><![CDATA[ This method creates a thread without specifying a run method either by deriving from the Thread class, or   by passing a Runnable object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_USELESS_THREAD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_USELESS_THREAD_none</configKey>
<description><![CDATA[ This method creates a thread without specifying a run method either by deriving from the Thread class, or   by passing a Runnable object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ESYNC_EMPTY_SYNC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ESYNC_EMPTY_SYNC_generic</configKey>
<description><![CDATA[ The code contains an empty synchronized block. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ESYNC_EMPTY_SYNC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ESYNC_EMPTY_SYNC_none</configKey>
<description><![CDATA[ The code contains an empty synchronized block. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IS2_INCONSISTENT_SYNC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IS2_INCONSISTENT_SYNC_generic</configKey>
<description><![CDATA[ The fields of this class appear to be accessed inconsistently with respect   to synchronization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IS2_INCONSISTENT_SYNC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IS2_INCONSISTENT_SYNC_none</configKey>
<description><![CDATA[ The fields of this class appear to be accessed inconsistently with respect   to synchronization. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IS_FIELD_NOT_GUARDED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IS_FIELD_NOT_GUARDED_generic</configKey>
<description><![CDATA[ This field is annotated with net.jcip.annotations.GuardedBy, but can be accessed in a way that seems to violate the annotation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IS_FIELD_NOT_GUARDED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IS_FIELD_NOT_GUARDED_none</configKey>
<description><![CDATA[ This field is annotated with net.jcip.annotations.GuardedBy, but can be accessed in a way that seems to violate the annotation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IS_INCONSISTENT_SYNC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IS_INCONSISTENT_SYNC_generic</configKey>
<description><![CDATA[ The fields of this class appear to be accessed inconsistently with respect   to synchronization. (<i>FindBugs&trade; Deprecated</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IS_INCONSISTENT_SYNC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IS_INCONSISTENT_SYNC_none</configKey>
<description><![CDATA[ The fields of this class appear to be accessed inconsistently with respect   to synchronization. (<i>FindBugs&trade; Deprecated</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JLM_JSR166_LOCK_MONITORENTER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JLM_JSR166_LOCK_MONITORENTER_generic</configKey>
<description><![CDATA[ This method performs synchronization an object that implements java.util.concurrent.locks.Lock. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JLM_JSR166_LOCK_MONITORENTER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JLM_JSR166_LOCK_MONITORENTER_none</configKey>
<description><![CDATA[ This method performs synchronization an object that implements java.util.concurrent.locks.Lock. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER_generic</configKey>
<description><![CDATA[ This method performs synchronization an object that is an instance of a class from the java.util.concurrent package (or its subclasses). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JLM_JSR166_UTILCONCURRENT_MONITORENTER_none</configKey>
<description><![CDATA[ This method performs synchronization an object that is an instance of a class from the java.util.concurrent package (or its subclasses). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT_generic</configKey>
<description><![CDATA[ This method calls wait(), notify() or notifyAll()() on an object that also provides an await(), signal(), signalAll() method (such as util.concurrent Condition objects). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT_none</configKey>
<description><![CDATA[ This method calls wait(), notify() or notifyAll()() on an object that also provides an await(), signal(), signalAll() method (such as util.concurrent Condition objects). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LI_LAZY_INIT_INSTANCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LI_LAZY_INIT_INSTANCE_generic</configKey>
<description><![CDATA[ This method contains an unsynchronized lazy initialization of a non-volatile field. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LI_LAZY_INIT_INSTANCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LI_LAZY_INIT_INSTANCE_none</configKey>
<description><![CDATA[ This method contains an unsynchronized lazy initialization of a non-volatile field. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LI_LAZY_INIT_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LI_LAZY_INIT_STATIC_generic</configKey>
<description><![CDATA[ This method contains an unsynchronized lazy initialization of a non-volatile static field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LI_LAZY_INIT_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LI_LAZY_INIT_STATIC_none</configKey>
<description><![CDATA[ This method contains an unsynchronized lazy initialization of a non-volatile static field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LI_LAZY_INIT_UPDATE_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LI_LAZY_INIT_UPDATE_STATIC_generic</configKey>
<description><![CDATA[ This method contains an unsynchronized lazy initialization of a static field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.LI_LAZY_INIT_UPDATE_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.LI_LAZY_INIT_UPDATE_STATIC_none</configKey>
<description><![CDATA[ This method contains an unsynchronized lazy initialization of a static field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD_generic</configKey>
<description><![CDATA[ This method synchronizes on a field in what appears to be an attempt to guard against simultaneous updates to that field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD_none</configKey>
<description><![CDATA[ This method synchronizes on a field in what appears to be an attempt to guard against simultaneous updates to that field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ML_SYNC_ON_UPDATED_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ML_SYNC_ON_UPDATED_FIELD_generic</configKey>
<description><![CDATA[ This method synchronizes on an object    referenced from a mutable field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ML_SYNC_ON_UPDATED_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ML_SYNC_ON_UPDATED_FIELD_none</configKey>
<description><![CDATA[ This method synchronizes on an object    referenced from a mutable field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MSF_MUTABLE_SERVLET_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MSF_MUTABLE_SERVLET_FIELD_generic</configKey>
<description><![CDATA[ A web server generally only creates one instance of servlet or jsp class (i.e., treats the class as a Singleton), and will have multiple threads invoke methods on that instance to service multiple simultaneous requests. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MSF_MUTABLE_SERVLET_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MSF_MUTABLE_SERVLET_FIELD_none</configKey>
<description><![CDATA[ A web server generally only creates one instance of servlet or jsp class (i.e., treats the class as a Singleton), and will have multiple threads invoke methods on that instance to service multiple simultaneous requests. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MWN_MISMATCHED_NOTIFY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MWN_MISMATCHED_NOTIFY_generic</configKey>
<description><![CDATA[ This method calls Object.notify() or Object.notifyAll() without obviously holding a lock on the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MWN_MISMATCHED_NOTIFY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MWN_MISMATCHED_NOTIFY_none</configKey>
<description><![CDATA[ This method calls Object.notify() or Object.notifyAll() without obviously holding a lock on the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MWN_MISMATCHED_WAIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MWN_MISMATCHED_WAIT_generic</configKey>
<description><![CDATA[ This method calls Object.wait() without obviously holding a lock on the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MWN_MISMATCHED_WAIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MWN_MISMATCHED_WAIT_none</configKey>
<description><![CDATA[ This method calls Object.wait() without obviously holding a lock on the object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NN_NAKED_NOTIFY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NN_NAKED_NOTIFY_generic</configKey>
<description><![CDATA[ A call to notify() or notifyAll()   was made without any (apparent) accompanying   modification to mutable object state. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NN_NAKED_NOTIFY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NN_NAKED_NOTIFY_none</configKey>
<description><![CDATA[ A call to notify() or notifyAll()   was made without any (apparent) accompanying   modification to mutable object state. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_SYNC_AND_NULL_CHECK_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_SYNC_AND_NULL_CHECK_FIELD_generic</configKey>
<description><![CDATA[ Since the field is synchronized on, it seems not likely to be null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_SYNC_AND_NULL_CHECK_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_SYNC_AND_NULL_CHECK_FIELD_none</configKey>
<description><![CDATA[ Since the field is synchronized on, it seems not likely to be null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NO_NOTIFY_NOT_NOTIFYALL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NO_NOTIFY_NOT_NOTIFYALL_generic</configKey>
<description><![CDATA[ This method calls notify() rather than notifyAll(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NO_NOTIFY_NOT_NOTIFYALL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NO_NOTIFY_NOT_NOTIFYALL_none</configKey>
<description><![CDATA[ This method calls notify() rather than notifyAll(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RS_READOBJECT_SYNC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RS_READOBJECT_SYNC_generic</configKey>
<description><![CDATA[ This serializable class defines a readObject() which is   synchronized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RS_READOBJECT_SYNC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RS_READOBJECT_SYNC_none</configKey>
<description><![CDATA[ This serializable class defines a readObject() which is   synchronized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED_generic</configKey>
<description><![CDATA[ The putIfAbsent method is typically used to ensure that a         single value is associated with a given key (the first value for which put         if absent succeeds). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED_none</configKey>
<description><![CDATA[ The putIfAbsent method is typically used to ensure that a         single value is associated with a given key (the first value for which put         if absent succeeds). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RU_INVOKE_RUN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RU_INVOKE_RUN_generic</configKey>
<description><![CDATA[ This method explicitly invokes run() on an object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RU_INVOKE_RUN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RU_INVOKE_RUN_none</configKey>
<description><![CDATA[ This method explicitly invokes run() on an object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SC_START_IN_CTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SC_START_IN_CTOR_generic</configKey>
<description><![CDATA[ The constructor starts a thread. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SC_START_IN_CTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SC_START_IN_CTOR_none</configKey>
<description><![CDATA[ The constructor starts a thread. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SP_SPIN_ON_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SP_SPIN_ON_FIELD_generic</configKey>
<description><![CDATA[ This method spins in a loop which reads a field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SP_SPIN_ON_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SP_SPIN_ON_FIELD_none</configKey>
<description><![CDATA[ This method spins in a loop which reads a field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE_generic</configKey>
<description><![CDATA[ Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE_none</configKey>
<description><![CDATA[ Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE_generic</configKey>
<description><![CDATA[ As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE_none</configKey>
<description><![CDATA[ As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_STATIC_CALENDAR_INSTANCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_STATIC_CALENDAR_INSTANCE_generic</configKey>
<description><![CDATA[ Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_STATIC_CALENDAR_INSTANCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_STATIC_CALENDAR_INSTANCE_none</configKey>
<description><![CDATA[ Even though the JavaDoc does not contain a hint about it, Calendars are inherently unsafe for multihtreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE_generic</configKey>
<description><![CDATA[ As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE_none</configKey>
<description><![CDATA[ As the JavaDoc states, DateFormats are inherently unsafe for multithreaded use. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SWL_SLEEP_WITH_LOCK_HELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SWL_SLEEP_WITH_LOCK_HELD_generic</configKey>
<description><![CDATA[ This method calls Thread.sleep() with a lock held. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SWL_SLEEP_WITH_LOCK_HELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SWL_SLEEP_WITH_LOCK_HELD_none</configKey>
<description><![CDATA[ This method calls Thread.sleep() with a lock held. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TLW_TWO_LOCK_NOTIFY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TLW_TWO_LOCK_NOTIFY_generic</configKey>
<description><![CDATA[ The code calls notify() or notifyAll() while two locks   are held. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TLW_TWO_LOCK_NOTIFY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TLW_TWO_LOCK_NOTIFY_none</configKey>
<description><![CDATA[ The code calls notify() or notifyAll() while two locks   are held. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TLW_TWO_LOCK_WAIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TLW_TWO_LOCK_WAIT_generic</configKey>
<description><![CDATA[ Waiting on a monitor while two locks are held may cause   deadlock. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TLW_TWO_LOCK_WAIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TLW_TWO_LOCK_WAIT_none</configKey>
<description><![CDATA[ Waiting on a monitor while two locks are held may cause   deadlock. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UG_SYNC_SET_UNSYNC_GET_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UG_SYNC_SET_UNSYNC_GET_generic</configKey>
<description><![CDATA[ This class contains similarly-named get and set   methods where the set method is synchronized and the get method is not. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UG_SYNC_SET_UNSYNC_GET_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UG_SYNC_SET_UNSYNC_GET_none</configKey>
<description><![CDATA[ This class contains similarly-named get and set   methods where the set method is synchronized and the get method is not. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_generic</configKey>
<description><![CDATA[ This method acquires a JSR-166 (java.util.concurrent) lock, but does not release it on all paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_none</configKey>
<description><![CDATA[ This method acquires a JSR-166 (java.util.concurrent) lock, but does not release it on all paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH_generic</configKey>
<description><![CDATA[ This method acquires a JSR-166 (java.util.concurrent) lock, but does not release it on all exception paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UL_UNRELEASED_LOCK_EXCEPTION_PATH_none</configKey>
<description><![CDATA[ This method acquires a JSR-166 (java.util.concurrent) lock, but does not release it on all exception paths out of the method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UW_UNCOND_WAIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UW_UNCOND_WAIT_generic</configKey>
<description><![CDATA[ This method contains a call to java.lang.Object.wait() which   is not guarded by conditional control flow. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UW_UNCOND_WAIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UW_UNCOND_WAIT_none</configKey>
<description><![CDATA[ This method contains a call to java.lang.Object.wait() which   is not guarded by conditional control flow. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VO_VOLATILE_INCREMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VO_VOLATILE_INCREMENT_generic</configKey>
<description><![CDATA[ This code increments a volatile field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VO_VOLATILE_INCREMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VO_VOLATILE_INCREMENT_none</configKey>
<description><![CDATA[ This code increments a volatile field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VO_VOLATILE_REFERENCE_TO_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VO_VOLATILE_REFERENCE_TO_ARRAY_generic</configKey>
<description><![CDATA[ This declares a volatile reference to an array, which might not be what you want. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VO_VOLATILE_REFERENCE_TO_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VO_VOLATILE_REFERENCE_TO_ARRAY_none</configKey>
<description><![CDATA[ This declares a volatile reference to an array, which might not be what you want. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL_generic</configKey>
<description><![CDATA[ This instance method synchronizes on this.getClass(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL_none</configKey>
<description><![CDATA[ This instance method synchronizes on this.getClass(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WS_WRITEOBJECT_SYNC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WS_WRITEOBJECT_SYNC_generic</configKey>
<description><![CDATA[ This class has a writeObject() method which is synchronized;   however, no other method of the class is synchronized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WS_WRITEOBJECT_SYNC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WS_WRITEOBJECT_SYNC_none</configKey>
<description><![CDATA[ This class has a writeObject() method which is synchronized;   however, no other method of the class is synchronized. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WA_AWAIT_NOT_IN_LOOP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WA_AWAIT_NOT_IN_LOOP_generic</configKey>
<description><![CDATA[ This method contains a call to java.util.concurrent.await()    (or variants)   which is not in a loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WA_AWAIT_NOT_IN_LOOP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WA_AWAIT_NOT_IN_LOOP_none</configKey>
<description><![CDATA[ This method contains a call to java.util.concurrent.await()    (or variants)   which is not in a loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WA_NOT_IN_LOOP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WA_NOT_IN_LOOP_generic</configKey>
<description><![CDATA[ This method contains a call to java.lang.Object.wait()   which is not in a loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WA_NOT_IN_LOOP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WA_NOT_IN_LOOP_none</configKey>
<description><![CDATA[ This method contains a call to java.lang.Object.wait()   which is not in a loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_FIELD_REFERENCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_FIELD_REFERENCE_generic</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_FIELD_REFERENCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_FIELD_REFERENCE_none</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_METHOD_CALL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_METHOD_CALL_generic</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_METHOD_CALL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_METHOD_CALL_none</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_NULL_DEREFERENCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_NULL_DEREFERENCE_generic</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_NULL_DEREFERENCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_NULL_DEREFERENCE_none</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_OPERATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_OPERATION_generic</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NOISE_OPERATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NOISE_OPERATION_none</configKey>
<description><![CDATA[ Bogus warning. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_generic</configKey>
<description><![CDATA[ A primitive is boxed, and then immediately unboxed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_none</configKey>
<description><![CDATA[ A primitive is boxed, and then immediately unboxed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION_generic</configKey>
<description><![CDATA[ A primitive boxed value constructed and then immediately converted into a different primitive type (e.g., new Double(d).intValue()). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION_none</configKey>
<description><![CDATA[ A primitive boxed value constructed and then immediately converted into a different primitive type (e.g., new Double(d).intValue()). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_UNBOXING_IMMEDIATELY_REBOXED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_UNBOXING_IMMEDIATELY_REBOXED_generic</configKey>
<description><![CDATA[ A boxed value is unboxed and then immediately reboxed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BX_UNBOXING_IMMEDIATELY_REBOXED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BX_UNBOXING_IMMEDIATELY_REBOXED_none</configKey>
<description><![CDATA[ A boxed value is unboxed and then immediately reboxed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_BOXED_PRIMITIVE_TOSTRING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_BOXED_PRIMITIVE_TOSTRING_generic</configKey>
<description><![CDATA[ A boxed primitive is allocated just to call toString(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_BOXED_PRIMITIVE_TOSTRING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_BOXED_PRIMITIVE_TOSTRING_none</configKey>
<description><![CDATA[ A boxed primitive is allocated just to call toString(). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_FP_NUMBER_CTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_FP_NUMBER_CTOR_generic</configKey>
<description><![CDATA[ Using new Double(double) is guaranteed to always result in a new object whereas       Double.valueOf(double) allows caching of values to be done by the compiler, class library, or JVM. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_FP_NUMBER_CTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_FP_NUMBER_CTOR_none</configKey>
<description><![CDATA[ Using new Double(double) is guaranteed to always result in a new object whereas       Double.valueOf(double) allows caching of values to be done by the compiler, class library, or JVM. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_NUMBER_CTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_NUMBER_CTOR_generic</configKey>
<description><![CDATA[ Using new Integer(int) is guaranteed to always result in a new object whereas       Integer.valueOf(int) allows caching of values to be done by the compiler, class library, or JVM. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_NUMBER_CTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_NUMBER_CTOR_none</configKey>
<description><![CDATA[ Using new Integer(int) is guaranteed to always result in a new object whereas       Integer.valueOf(int) allows caching of values to be done by the compiler, class library, or JVM. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_BLOCKING_METHODS_ON_URL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_BLOCKING_METHODS_ON_URL_generic</configKey>
<description><![CDATA[ The equals and hashCode method of URL perform domain name resolution, this can result in a big performance hit. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_BLOCKING_METHODS_ON_URL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_BLOCKING_METHODS_ON_URL_none</configKey>
<description><![CDATA[ The equals and hashCode method of URL perform domain name resolution, this can result in a big performance hit. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_COLLECTION_OF_URLS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_COLLECTION_OF_URLS_generic</configKey>
<description><![CDATA[ This method or field is or uses a Map or Set of URLs. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_COLLECTION_OF_URLS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_COLLECTION_OF_URLS_none</configKey>
<description><![CDATA[ This method or field is or uses a Map or Set of URLs. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_BOOLEAN_CTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_BOOLEAN_CTOR_generic</configKey>
<description><![CDATA[ Creating new instances of java.lang.Boolean wastes   memory, since Boolean objects are immutable and there are   only two useful values of this type. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_BOOLEAN_CTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_BOOLEAN_CTOR_none</configKey>
<description><![CDATA[ Creating new instances of java.lang.Boolean wastes   memory, since Boolean objects are immutable and there are   only two useful values of this type. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_GC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_GC_generic</configKey>
<description><![CDATA[ Code explicitly invokes garbage collection. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_GC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_GC_none</configKey>
<description><![CDATA[ Code explicitly invokes garbage collection. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_NEW_FOR_GETCLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_NEW_FOR_GETCLASS_generic</configKey>
<description><![CDATA[ This method allocates an object just to call getClass() on it, in order to   retrieve the Class object for it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_NEW_FOR_GETCLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_NEW_FOR_GETCLASS_none</configKey>
<description><![CDATA[ This method allocates an object just to call getClass() on it, in order to   retrieve the Class object for it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_NEXTINT_VIA_NEXTDOUBLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_NEXTINT_VIA_NEXTDOUBLE_generic</configKey>
<description><![CDATA[ If r is a java.util.Random, you can generate a random number from 0 to n-1 using r.nextInt(n), rather than using (int)(r.nextDouble() * n). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_NEXTINT_VIA_NEXTDOUBLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_NEXTINT_VIA_NEXTDOUBLE_none</configKey>
<description><![CDATA[ If r is a java.util.Random, you can generate a random number from 0 to n-1 using r.nextInt(n), rather than using (int)(r.nextDouble() * n). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_STRING_CTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_STRING_CTOR_generic</configKey>
<description><![CDATA[ Using the java.lang.String(String) constructor wastes memory   because the object so constructed will be functionally indistinguishable   from the String passed as a parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_STRING_CTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_STRING_CTOR_none</configKey>
<description><![CDATA[ Using the java.lang.String(String) constructor wastes memory   because the object so constructed will be functionally indistinguishable   from the String passed as a parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_STRING_TOSTRING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_STRING_TOSTRING_generic</configKey>
<description><![CDATA[ Calling String.toString() is just a redundant operation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_STRING_TOSTRING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_STRING_TOSTRING_none</configKey>
<description><![CDATA[ Calling String.toString() is just a redundant operation. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_STRING_VOID_CTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_STRING_VOID_CTOR_generic</configKey>
<description><![CDATA[ Creating a new java.lang.String object using the   no-argument constructor wastes memory because the object so created will   be functionally indistinguishable from the empty string constant   "". ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DM_STRING_VOID_CTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DM_STRING_VOID_CTOR_none</configKey>
<description><![CDATA[ Creating a new java.lang.String object using the   no-argument constructor wastes memory because the object so created will   be functionally indistinguishable from the empty string constant   "". ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HSC_HUGE_SHARED_STRING_CONSTANT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HSC_HUGE_SHARED_STRING_CONSTANT_generic</configKey>
<description><![CDATA[ A large String constant is duplicated across multiple class files. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HSC_HUGE_SHARED_STRING_CONSTANT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HSC_HUGE_SHARED_STRING_CONSTANT_none</configKey>
<description><![CDATA[ A large String constant is duplicated across multiple class files. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IMA_INEFFICIENT_MEMBER_ACCESS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IMA_INEFFICIENT_MEMBER_ACCESS_generic</configKey>
<description><![CDATA[ This method of an inner class reads from or writes to a private member variable of the owning class,       or calls a private method of the owning class. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IMA_INEFFICIENT_MEMBER_ACCESS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IMA_INEFFICIENT_MEMBER_ACCESS_none</configKey>
<description><![CDATA[ This method of an inner class reads from or writes to a private member variable of the owning class,       or calls a private method of the owning class. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ITA_INEFFICIENT_TO_ARRAY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ITA_INEFFICIENT_TO_ARRAY_generic</configKey>
<description><![CDATA[ This method uses the toArray() method of a collection derived class, and passes in a zero-length prototype array argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ITA_INEFFICIENT_TO_ARRAY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ITA_INEFFICIENT_TO_ARRAY_none</configKey>
<description><![CDATA[ This method uses the toArray() method of a collection derived class, and passes in a zero-length prototype array argument. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SBSC_USE_STRINGBUFFER_CONCATENATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SBSC_USE_STRINGBUFFER_CONCATENATION_generic</configKey>
<description><![CDATA[ The method seems to be building a String using concatenation in a loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SBSC_USE_STRINGBUFFER_CONCATENATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SBSC_USE_STRINGBUFFER_CONCATENATION_none</configKey>
<description><![CDATA[ The method seems to be building a String using concatenation in a loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_generic</configKey>
<description><![CDATA[ This class is an inner class, but does not use its embedded reference   to the object which created it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_none</configKey>
<description><![CDATA[ This class is an inner class, but does not use its embedded reference   to the object which created it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_ANON_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_ANON_generic</configKey>
<description><![CDATA[ This class is an inner class, but does not use its embedded reference   to the object which created it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_ANON_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_ANON_none</configKey>
<description><![CDATA[ This class is an inner class, but does not use its embedded reference   to the object which created it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS_generic</configKey>
<description><![CDATA[ This class is an inner class, but does not use its embedded reference   to the object which created it except during construction of the inner object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS_none</configKey>
<description><![CDATA[ This class is an inner class, but does not use its embedded reference   to the object which created it except during construction of the inner object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SS_SHOULD_BE_STATIC_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SS_SHOULD_BE_STATIC_generic</configKey>
<description><![CDATA[ This class contains an instance final field that    is initialized to a compile-time static value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SS_SHOULD_BE_STATIC_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SS_SHOULD_BE_STATIC_none</configKey>
<description><![CDATA[ This class contains an instance final field that    is initialized to a compile-time static value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UM_UNNECESSARY_MATH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UM_UNNECESSARY_MATH_generic</configKey>
<description><![CDATA[ This method uses a static method from java.lang.Math on a constant value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UM_UNNECESSARY_MATH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UM_UNNECESSARY_MATH_none</configKey>
<description><![CDATA[ This method uses a static method from java.lang.Math on a constant value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UPM_UNCALLED_PRIVATE_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UPM_UNCALLED_PRIVATE_METHOD_generic</configKey>
<description><![CDATA[ This private method is never called. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UPM_UNCALLED_PRIVATE_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UPM_UNCALLED_PRIVATE_METHOD_none</configKey>
<description><![CDATA[ This private method is never called. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.URF_UNREAD_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.URF_UNREAD_FIELD_generic</configKey>
<description><![CDATA[ This field is never read. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.URF_UNREAD_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.URF_UNREAD_FIELD_none</configKey>
<description><![CDATA[ This field is never read. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UUF_UNUSED_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UUF_UNUSED_FIELD_generic</configKey>
<description><![CDATA[ This field is never used. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UUF_UNUSED_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UUF_UNUSED_FIELD_none</configKey>
<description><![CDATA[ This field is never used. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WMI_WRONG_MAP_ITERATOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WMI_WRONG_MAP_ITERATOR_generic</configKey>
<description><![CDATA[ This method accesses the value of a Map entry, using a key that was retrieved from a keySet iterator. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.WMI_WRONG_MAP_ITERATOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.WMI_WRONG_MAP_ITERATOR_none</configKey>
<description><![CDATA[ This method accesses the value of a Map entry, using a key that was retrieved from a keySet iterator. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_CONSTANT_DB_PASSWORD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_CONSTANT_DB_PASSWORD_generic</configKey>
<description><![CDATA[ This code creates a database connect using a hardcoded, constant password. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_CONSTANT_DB_PASSWORD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_CONSTANT_DB_PASSWORD_none</configKey>
<description><![CDATA[ This code creates a database connect using a hardcoded, constant password. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_EMPTY_DB_PASSWORD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_EMPTY_DB_PASSWORD_generic</configKey>
<description><![CDATA[ This code creates a database connect using a blank or empty password. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_EMPTY_DB_PASSWORD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_EMPTY_DB_PASSWORD_none</configKey>
<description><![CDATA[ This code creates a database connect using a blank or empty password. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_COOKIE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_COOKIE_generic</configKey>
<description><![CDATA[ This code constructs an HTTP Cookie using an untrusted HTTP parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_COOKIE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_COOKIE_none</configKey>
<description><![CDATA[ This code constructs an HTTP Cookie using an untrusted HTTP parameter. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER_generic</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to an HTTP header, which allows for a HTTP response splitting vulnerability. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER_none</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to an HTTP header, which allows for a HTTP response splitting vulnerability. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PT_ABSOLUTE_PATH_TRAVERSAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PT_ABSOLUTE_PATH_TRAVERSAL_generic</configKey>
<description><![CDATA[ The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as "/abs/path" that can resolve to a location that is outside of that directory. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PT_ABSOLUTE_PATH_TRAVERSAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PT_ABSOLUTE_PATH_TRAVERSAL_none</configKey>
<description><![CDATA[ The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as "/abs/path" that can resolve to a location that is outside of that directory. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PT_RELATIVE_PATH_TRAVERSAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PT_RELATIVE_PATH_TRAVERSAL_generic</configKey>
<description><![CDATA[ The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as ".." that can resolve to a location that is outside of that directory. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PT_RELATIVE_PATH_TRAVERSAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PT_RELATIVE_PATH_TRAVERSAL_none</configKey>
<description><![CDATA[ The software uses an HTTP request parameter to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as ".." that can resolve to a location that is outside of that directory. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE_generic</configKey>
<description><![CDATA[ The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE_none</configKey>
<description><![CDATA[ The method invokes the execute method on an SQL statement with a String that seems to be dynamically generated. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING_generic</configKey>
<description><![CDATA[ The code creates an SQL prepared statement from a nonconstant String. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING_none</configKey>
<description><![CDATA[ The code creates an SQL prepared statement from a nonconstant String. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER_generic</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to JSP output, which allows for a cross site scripting vulnerability. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_JSP_WRITER_none</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to JSP output, which allows for a cross site scripting vulnerability. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR_generic</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to a Server error page (using HttpServletResponse.sendError). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SEND_ERROR_none</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to a Server error page (using HttpServletResponse.sendError). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER_generic</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to Servlet output, which allows for a reflected cross site scripting vulnerability. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER_none</configKey>
<description><![CDATA[ This code directly writes an HTTP parameter to Servlet output, which allows for a reflected cross site scripting vulnerability. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION_generic</configKey>
<description><![CDATA[ This code casts a Collection to an abstract collection (such as List, Set, or Map). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_BAD_CAST_TO_ABSTRACT_COLLECTION_none</configKey>
<description><![CDATA[ This code casts a Collection to an abstract collection (such as List, Set, or Map). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION_generic</configKey>
<description><![CDATA[ This code casts an abstract collection (such as a Collection, List, or Set) to a specific concrete implementation (such as an ArrayList or HashSet). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_BAD_CAST_TO_CONCRETE_COLLECTION_none</configKey>
<description><![CDATA[ This code casts an abstract collection (such as a Collection, List, or Set) to a specific concrete implementation (such as an ArrayList or HashSet). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_generic</configKey>
<description><![CDATA[ This cast is unchecked, and not all instances of the type casted from can be cast to the type it is being cast to. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_none</configKey>
<description><![CDATA[ This cast is unchecked, and not all instances of the type casted from can be cast to the type it is being cast to. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE_generic</configKey>
<description><![CDATA[ This code performs an unchecked cast of the return value of a method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_UNCONFIRMED_CAST_OF_RETURN_VALUE_none</configKey>
<description><![CDATA[ This code performs an unchecked cast of the return value of a method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_VACUOUS_INSTANCEOF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_VACUOUS_INSTANCEOF_generic</configKey>
<description><![CDATA[ This instanceof test will always return true (unless the value being tested is null). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.BC_VACUOUS_INSTANCEOF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.BC_VACUOUS_INSTANCEOF_none</configKey>
<description><![CDATA[ This instanceof test will always return true (unless the value being tested is null). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT_generic</configKey>
<description><![CDATA[ The code performs an unsigned right shift, whose result is then cast to a short or byte, which discards the upper bits of the result. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT_none</configKey>
<description><![CDATA[ The code performs an unsigned right shift, whose result is then cast to a short or byte, which discards the upper bits of the result. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CD_CIRCULAR_DEPENDENCY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CD_CIRCULAR_DEPENDENCY_generic</configKey>
<description><![CDATA[ This class has a circular dependency with other classes. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CD_CIRCULAR_DEPENDENCY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CD_CIRCULAR_DEPENDENCY_none</configKey>
<description><![CDATA[ This class has a circular dependency with other classes. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CI_CONFUSED_INHERITANCE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CI_CONFUSED_INHERITANCE_generic</configKey>
<description><![CDATA[ This class is declared to be final, but declares fields to be protected. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.CI_CONFUSED_INHERITANCE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.CI_CONFUSED_INHERITANCE_none</configKey>
<description><![CDATA[ This class is declared to be final, but declares fields to be protected. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DB_DUPLICATE_BRANCHES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DB_DUPLICATE_BRANCHES_generic</configKey>
<description><![CDATA[ This method uses the same code to implement two branches of a conditional branch. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DB_DUPLICATE_BRANCHES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DB_DUPLICATE_BRANCHES_none</configKey>
<description><![CDATA[ This method uses the same code to implement two branches of a conditional branch. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DB_DUPLICATE_SWITCH_CLAUSES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DB_DUPLICATE_SWITCH_CLAUSES_generic</configKey>
<description><![CDATA[ This method uses the same code to implement two clauses of a switch statement. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DB_DUPLICATE_SWITCH_CLAUSES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DB_DUPLICATE_SWITCH_CLAUSES_none</configKey>
<description><![CDATA[ This method uses the same code to implement two clauses of a switch statement. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_generic</configKey>
<description><![CDATA[ This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_none</configKey>
<description><![CDATA[ This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_IN_RETURN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_IN_RETURN_generic</configKey>
<description><![CDATA[ This statement assigns to a local variable in a return statement. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_IN_RETURN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_IN_RETURN_none</configKey>
<description><![CDATA[ This statement assigns to a local variable in a return statement. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_OF_NULL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_OF_NULL_generic</configKey>
<description><![CDATA[ The code stores null into a local variable, and the stored value is not read. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_OF_NULL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_OF_NULL_none</configKey>
<description><![CDATA[ The code stores null into a local variable, and the stored value is not read. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD_generic</configKey>
<description><![CDATA[ This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD_none</configKey>
<description><![CDATA[ This instruction assigns a value to a local variable, but the value is not read or used in any subsequent instruction. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_HARDCODED_ABSOLUTE_FILENAME_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_HARDCODED_ABSOLUTE_FILENAME_generic</configKey>
<description><![CDATA[ This code constructs a File object using a hard coded to an absolute pathname (e.g., new File("/home/dannyc/workspace/j2ee/src/share/com/sun/enterprise/deployment"); ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_HARDCODED_ABSOLUTE_FILENAME_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_HARDCODED_ABSOLUTE_FILENAME_none</configKey>
<description><![CDATA[ This code constructs a File object using a hard coded to an absolute pathname (e.g., new File("/home/dannyc/workspace/j2ee/src/share/com/sun/enterprise/deployment"); ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN_generic</configKey>
<description><![CDATA[ This code seems to be passing a non-serializable object to the ObjectOutput.writeObject method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_NONSERIALIZABLE_OBJECT_WRITTEN_none</configKey>
<description><![CDATA[ This code seems to be passing a non-serializable object to the ObjectOutput.writeObject method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_USELESS_SUBSTRING_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_USELESS_SUBSTRING_generic</configKey>
<description><![CDATA[ This code invokes substring(0) on a String, which returns the original value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_USELESS_SUBSTRING_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_USELESS_SUBSTRING_none</configKey>
<description><![CDATA[ This code invokes substring(0) on a String, which returns the original value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED_generic</configKey>
<description><![CDATA[ A Thread object is passed as a parameter to a method where a Runnable is expected. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED_none</configKey>
<description><![CDATA[ A Thread object is passed as a parameter to a method where a Runnable is expected. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_UNSUPPORTED_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_UNSUPPORTED_METHOD_generic</configKey>
<description><![CDATA[ All targets of this method invocation throw an UnsupportedOperationException. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.DMI_UNSUPPORTED_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.DMI_UNSUPPORTED_METHOD_none</configKey>
<description><![CDATA[ All targets of this method invocation throw an UnsupportedOperationException. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_DOESNT_OVERRIDE_EQUALS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_DOESNT_OVERRIDE_EQUALS_generic</configKey>
<description><![CDATA[ This class extends a class that defines an equals method and adds fields, but doesn't define an equals method itself. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_DOESNT_OVERRIDE_EQUALS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_DOESNT_OVERRIDE_EQUALS_none</configKey>
<description><![CDATA[ This class extends a class that defines an equals method and adds fields, but doesn't define an equals method itself. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_UNUSUAL_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_UNUSUAL_generic</configKey>
<description><![CDATA[ This class doesn't do any of the patterns we recognize for checking that the type of the argument is compatible with the type of the this object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.EQ_UNUSUAL_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.EQ_UNUSUAL_none</configKey>
<description><![CDATA[ This class doesn't do any of the patterns we recognize for checking that the type of the argument is compatible with the type of the this object. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FE_FLOATING_POINT_EQUALITY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FE_FLOATING_POINT_EQUALITY_generic</configKey>
<description><![CDATA[ This operation compares two floating point values for equality. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.FE_FLOATING_POINT_EQUALITY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.FE_FLOATING_POINT_EQUALITY_none</configKey>
<description><![CDATA[ This operation compares two floating point values for equality. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN_generic</configKey>
<description><![CDATA[ An argument not of type Boolean is being formatted with a %b format specifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN_none</configKey>
<description><![CDATA[ An argument not of type Boolean is being formatted with a %b format specifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD_generic</configKey>
<description><![CDATA[ An inner class is invoking a method that could be resolved to either a inherited method or a method defined in an outer class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD_none</configKey>
<description><![CDATA[ An inner class is invoking a method that could be resolved to either a inherited method or a method defined in an outer class. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IC_INIT_CIRCULARITY_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IC_INIT_CIRCULARITY_generic</configKey>
<description><![CDATA[ A circularity was detected in the static initializers of the two   classes referenced by the bug instance. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IC_INIT_CIRCULARITY_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IC_INIT_CIRCULARITY_none</configKey>
<description><![CDATA[ A circularity was detected in the static initializers of the two   classes referenced by the bug instance. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_IDIV_CAST_TO_DOUBLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_IDIV_CAST_TO_DOUBLE_generic</configKey>
<description><![CDATA[ This code casts the result of an integral division (e.g., int or long division) operation to double or float. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_IDIV_CAST_TO_DOUBLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_IDIV_CAST_TO_DOUBLE_none</configKey>
<description><![CDATA[ This code casts the result of an integral division (e.g., int or long division) operation to double or float. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG_generic</configKey>
<description><![CDATA[ This code performs integer multiply and then converts the result to a long. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ICAST_INTEGER_MULTIPLY_CAST_TO_LONG_none</configKey>
<description><![CDATA[ This code performs integer multiply and then converts the result to a long. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW_generic</configKey>
<description><![CDATA[ The code computes the average of two integers using either division or signed right shift, and then uses the result as the index of an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IM_AVERAGE_COMPUTATION_COULD_OVERFLOW_none</configKey>
<description><![CDATA[ The code computes the average of two integers using either division or signed right shift, and then uses the result as the index of an array. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IM_BAD_CHECK_FOR_ODD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IM_BAD_CHECK_FOR_ODD_generic</configKey>
<description><![CDATA[ The code uses x % 2 == 1 to check to see if a value is odd, but this won't work for negative numbers (e.g., (-5) % 2 == -1). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.IM_BAD_CHECK_FOR_ODD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.IM_BAD_CHECK_FOR_ODD_none</configKey>
<description><![CDATA[ The code uses x % 2 == 1 to check to see if a value is odd, but this won't work for negative numbers (e.g., (-5) % 2 == -1). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_REM_BY_1_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_REM_BY_1_generic</configKey>
<description><![CDATA[ Any expression (exp % 1) is guaranteed to always return zero. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_BAD_REM_BY_1_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_BAD_REM_BY_1_none</configKey>
<description><![CDATA[ Any expression (exp % 1) is guaranteed to always return zero. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_VACUOUS_BIT_OPERATION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_VACUOUS_BIT_OPERATION_generic</configKey>
<description><![CDATA[ This is an integer bit operation (and, or, or exclusive or) that doesn't do any useful work (e.g., v &amp; 0xffffffff). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_VACUOUS_BIT_OPERATION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_VACUOUS_BIT_OPERATION_none</configKey>
<description><![CDATA[ This is an integer bit operation (and, or, or exclusive or) that doesn't do any useful work (e.g., v &amp; 0xffffffff). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_VACUOUS_COMPARISON_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_VACUOUS_COMPARISON_generic</configKey>
<description><![CDATA[ There is an integer comparison that always returns the same value (e.g., x &lt;= Integer.MAX_VALUE). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.INT_VACUOUS_COMPARISON_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.INT_VACUOUS_COMPARISON_none</configKey>
<description><![CDATA[ There is an integer comparison that always returns the same value (e.g., x &lt;= Integer.MAX_VALUE). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD_generic</configKey>
<description><![CDATA[ This class extends from a Servlet class, and uses an instance member variable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MTIA_SUSPECT_SERVLET_INSTANCE_FIELD_none</configKey>
<description><![CDATA[ This class extends from a Servlet class, and uses an instance member variable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD_generic</configKey>
<description><![CDATA[ This class extends from a Struts Action class, and uses an instance member variable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.MTIA_SUSPECT_STRUTS_INSTANCE_FIELD_none</configKey>
<description><![CDATA[ This class extends from a Struts Action class, and uses an instance member variable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_DEREFERENCE_OF_READLINE_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_DEREFERENCE_OF_READLINE_VALUE_generic</configKey>
<description><![CDATA[ The result of invoking readLine() is dereferenced without checking to see if the result is null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_DEREFERENCE_OF_READLINE_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_DEREFERENCE_OF_READLINE_VALUE_none</configKey>
<description><![CDATA[ The result of invoking readLine() is dereferenced without checking to see if the result is null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_generic</configKey>
<description><![CDATA[ This is a read of a field is never initialized within any constructor, and is therefore could be null after the object is initialized. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_none</configKey>
<description><![CDATA[ This is a read of a field is never initialized within any constructor, and is therefore could be null after the object is initialized. (<i>FindBugs&trade; Deprecated</i>) (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE_generic</configKey>
<description><![CDATA[ The result of invoking readLine() is immediately dereferenced. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_IMMEDIATE_DEREFERENCE_OF_READLINE_none</configKey>
<description><![CDATA[ The result of invoking readLine() is immediately dereferenced. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_LOAD_OF_KNOWN_NULL_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_LOAD_OF_KNOWN_NULL_VALUE_generic</configKey>
<description><![CDATA[ The variable referenced at this point is known to be null due to an earlier    check against null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_LOAD_OF_KNOWN_NULL_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_LOAD_OF_KNOWN_NULL_VALUE_none</configKey>
<description><![CDATA[ The variable referenced at this point is known to be null due to an earlier    check against null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE_generic</configKey>
<description><![CDATA[ The return value from a method is dereferenced without a null check, and the return value of that method is one that should generally be checked for null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE_none</configKey>
<description><![CDATA[ The return value from a method is dereferenced without a null check, and the return value of that method is one that should generally be checked for null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE_generic</configKey>
<description><![CDATA[ There is a branch of statement that, <em>if executed,</em>  guarantees that a null value will be dereferenced, which would generate a NullPointerException when the code is executed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE_none</configKey>
<description><![CDATA[ There is a branch of statement that, <em>if executed,</em>  guarantees that a null value will be dereferenced, which would generate a NullPointerException when the code is executed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE_generic</configKey>
<description><![CDATA[ This parameter is always used in a way that requires it to be nonnull, but the parameter is explicitly annotated as being Nullable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE_none</configKey>
<description><![CDATA[ This parameter is always used in a way that requires it to be nonnull, but the parameter is explicitly annotated as being Nullable. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_generic</configKey>
<description><![CDATA[ The program is dereferencing a public or protected field that does not seem to ever have a non-null value written to it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_none</configKey>
<description><![CDATA[ The program is dereferencing a public or protected field that does not seem to ever have a non-null value written to it. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NS_DANGEROUS_NON_SHORT_CIRCUIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NS_DANGEROUS_NON_SHORT_CIRCUIT_generic</configKey>
<description><![CDATA[ This code seems to be using non-short-circuit logic (e.g., &amp; or |) rather than short-circuit logic (&amp;&amp; or ||). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NS_DANGEROUS_NON_SHORT_CIRCUIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NS_DANGEROUS_NON_SHORT_CIRCUIT_none</configKey>
<description><![CDATA[ This code seems to be using non-short-circuit logic (e.g., &amp; or |) rather than short-circuit logic (&amp;&amp; or ||). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NS_NON_SHORT_CIRCUIT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NS_NON_SHORT_CIRCUIT_generic</configKey>
<description><![CDATA[ This code seems to be using non-short-circuit logic (e.g., &amp; or |) rather than short-circuit logic (&amp;&amp; or ||). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.NS_NON_SHORT_CIRCUIT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.NS_NON_SHORT_CIRCUIT_none</configKey>
<description><![CDATA[ This code seems to be using non-short-circuit logic (e.g., &amp; or |) rather than short-circuit logic (&amp;&amp; or ||). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PS_PUBLIC_SEMAPHORES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PS_PUBLIC_SEMAPHORES_generic</configKey>
<description><![CDATA[ This class uses synchronization along with wait(), notify() or notifyAll() on itself (the this     reference). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PS_PUBLIC_SEMAPHORES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PS_PUBLIC_SEMAPHORES_none</configKey>
<description><![CDATA[ This class uses synchronization along with wait(), notify() or notifyAll() on itself (the this     reference). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS_generic</configKey>
<description><![CDATA[ It is often a better design to return a length zero array rather than a null reference to indicate that there are no results (i.e., an empty list of results). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.PZLA_PREFER_ZERO_LENGTH_ARRAYS_none</configKey>
<description><![CDATA[ It is often a better design to return a length zero array rather than a null reference to indicate that there are no results (i.e., an empty list of results). ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.QF_QUESTIONABLE_FOR_LOOP_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.QF_QUESTIONABLE_FOR_LOOP_generic</configKey>
<description><![CDATA[ Are you sure this for loop is incrementing the correct variable?    It appears that another variable is being initialized and checked    by the for loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.QF_QUESTIONABLE_FOR_LOOP_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.QF_QUESTIONABLE_FOR_LOOP_none</configKey>
<description><![CDATA[ Are you sure this for loop is incrementing the correct variable?    It appears that another variable is being initialized and checked    by the for loop. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE_generic</configKey>
<description><![CDATA[ This method contains a reference known to be non-null with another reference known to be null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE_none</configKey>
<description><![CDATA[ This method contains a reference known to be non-null with another reference known to be null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES_generic</configKey>
<description><![CDATA[ This method contains a redundant comparison of two references known to both be definitely null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES_none</configKey>
<description><![CDATA[ This method contains a redundant comparison of two references known to both be definitely null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE_generic</configKey>
<description><![CDATA[ This method contains a redundant check of a known non-null value against the constant null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE_none</configKey>
<description><![CDATA[ This method contains a redundant check of a known non-null value against the constant null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE_generic</configKey>
<description><![CDATA[ This method contains a redundant check of a known null value against the constant null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE_none</configKey>
<description><![CDATA[ This method contains a redundant check of a known null value against the constant null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.REC_CATCH_EXCEPTION_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.REC_CATCH_EXCEPTION_generic</configKey>
<description><![CDATA[ This catch block for Exception also catches any   RuntimeException, which could mask programming errors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.REC_CATCH_EXCEPTION_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.REC_CATCH_EXCEPTION_none</configKey>
<description><![CDATA[ This catch block for Exception also catches any   RuntimeException, which could mask programming errors. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RI_REDUNDANT_INTERFACES_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RI_REDUNDANT_INTERFACES_generic</configKey>
<description><![CDATA[ This class declares that it implements an interface that is also implemented by a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RI_REDUNDANT_INTERFACES_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RI_REDUNDANT_INTERFACES_none</configKey>
<description><![CDATA[ This class declares that it implements an interface that is also implemented by a superclass. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_CHECK_FOR_POSITIVE_INDEXOF_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_CHECK_FOR_POSITIVE_INDEXOF_generic</configKey>
<description><![CDATA[ The method invokes String.indexOf and checks to see if the result is positive or non-positive. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_CHECK_FOR_POSITIVE_INDEXOF_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_CHECK_FOR_POSITIVE_INDEXOF_none</configKey>
<description><![CDATA[ The method invokes String.indexOf and checks to see if the result is positive or non-positive. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_DONT_JUST_NULL_CHECK_READLINE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_DONT_JUST_NULL_CHECK_READLINE_generic</configKey>
<description><![CDATA[ The value returned by readLine is discarded after checking to see if the return value is non-null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_DONT_JUST_NULL_CHECK_READLINE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_DONT_JUST_NULL_CHECK_READLINE_none</configKey>
<description><![CDATA[ The value returned by readLine is discarded after checking to see if the return value is non-null. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_REM_OF_HASHCODE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_REM_OF_HASHCODE_generic</configKey>
<description><![CDATA[ This code computes a hashCode, and then computes the remainder of that value modulo another value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_REM_OF_HASHCODE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_REM_OF_HASHCODE_none</configKey>
<description><![CDATA[ This code computes a hashCode, and then computes the remainder of that value modulo another value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_REM_OF_RANDOM_INT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_REM_OF_RANDOM_INT_generic</configKey>
<description><![CDATA[ This code generates a random signed integer and then computes the remainder of that value modulo another value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_REM_OF_RANDOM_INT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_REM_OF_RANDOM_INT_none</configKey>
<description><![CDATA[ This code generates a random signed integer and then computes the remainder of that value modulo another value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_INFERRED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_INFERRED_generic</configKey>
<description><![CDATA[ This code calls a method and ignores the return value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_INFERRED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.RV_RETURN_VALUE_IGNORED_INFERRED_none</configKey>
<description><![CDATA[ This code calls a method and ignores the return value. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_DOUBLE_ASSIGNMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_DOUBLE_ASSIGNMENT_generic</configKey>
<description><![CDATA[ This method contains a double assignment of a field; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_FIELD_DOUBLE_ASSIGNMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_FIELD_DOUBLE_ASSIGNMENT_none</configKey>
<description><![CDATA[ This method contains a double assignment of a field; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_DOUBLE_ASSIGNMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_DOUBLE_ASSIGNMENT_generic</configKey>
<description><![CDATA[ This method contains a double assignment of a local variable; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_DOUBLE_ASSIGNMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_DOUBLE_ASSIGNMENT_none</configKey>
<description><![CDATA[ This method contains a double assignment of a local variable; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_generic</configKey>
<description><![CDATA[ This method contains a self assignment of a local variable; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SA_LOCAL_SELF_ASSIGNMENT_none</configKey>
<description><![CDATA[ This method contains a self assignment of a local variable; e.g. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_SWITCH_FALLTHROUGH_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_SWITCH_FALLTHROUGH_generic</configKey>
<description><![CDATA[ This method contains a switch statement where one case branch will fall through to the next case. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_SWITCH_FALLTHROUGH_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_SWITCH_FALLTHROUGH_none</configKey>
<description><![CDATA[ This method contains a switch statement where one case branch will fall through to the next case. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_SWITCH_NO_DEFAULT_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_SWITCH_NO_DEFAULT_generic</configKey>
<description><![CDATA[ This method contains a switch statement where default case is missing. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SF_SWITCH_NO_DEFAULT_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SF_SWITCH_NO_DEFAULT_none</configKey>
<description><![CDATA[ This method contains a switch statement where default case is missing. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD_generic</configKey>
<description><![CDATA[ This instance method writes to a static field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD_none</configKey>
<description><![CDATA[ This instance method writes to a static field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED_generic</configKey>
<description><![CDATA[ This class defines a private readResolve method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_PRIVATE_READ_RESOLVE_NOT_INHERITED_none</configKey>
<description><![CDATA[ This class defines a private readResolve method. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS_generic</configKey>
<description><![CDATA[ The field is marked as transient, but the class isn't Serializable, so marking it as transient has absolutely no effect. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS_none</configKey>
<description><![CDATA[ The field is marked as transient, but the class isn't Serializable, so marking it as transient has absolutely no effect. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK_generic</configKey>
<description><![CDATA[ A value is used in a way that requires it to be always be a value denoted by a type qualifier, but     there is an explicit annotation stating that it is not known where the value is required to have that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK_none</configKey>
<description><![CDATA[ A value is used in a way that requires it to be always be a value denoted by a type qualifier, but     there is an explicit annotation stating that it is not known where the value is required to have that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK_generic</configKey>
<description><![CDATA[ A value is used in a way that requires it to be never be a value denoted by a type qualifier, but     there is an explicit annotation stating that it is not known where the value is prohibited from having that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK_none</configKey>
<description><![CDATA[ A value is used in a way that requires it to be never be a value denoted by a type qualifier, but     there is an explicit annotation stating that it is not known where the value is prohibited from having that type qualifier. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_generic</configKey>
<description><![CDATA[ This method contains a useless control flow statement, where control flow continues onto the same place regardless of whether or not the branch is taken. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_none</configKey>
<description><![CDATA[ This method contains a useless control flow statement, where control flow continues onto the same place regardless of whether or not the branch is taken. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE_generic</configKey>
<description><![CDATA[ This method contains a useless control flow statement in which control flow follows to the same or following line regardless of whether or not the branch is taken. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UCF_USELESS_CONTROL_FLOW_NEXT_LINE_none</configKey>
<description><![CDATA[ This method contains a useless control flow statement in which control flow follows to the same or following line regardless of whether or not the branch is taken. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UOE_USE_OBJECT_EQUALS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UOE_USE_OBJECT_EQUALS_generic</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) method on a final class that doesn't override the equals method in the Object class, effectively making the equals method test for sameness, like ==. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UOE_USE_OBJECT_EQUALS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UOE_USE_OBJECT_EQUALS_none</configKey>
<description><![CDATA[ This method invokes the .equals(Object o) method on a final class that doesn't override the equals method in the Object class, effectively making the equals method test for sameness, like ==. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.USM_USELESS_ABSTRACT_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.USM_USELESS_ABSTRACT_METHOD_generic</configKey>
<description><![CDATA[ This abstract method is already defined in an interface that is implemented by this abstract       class. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.USM_USELESS_ABSTRACT_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.USM_USELESS_ABSTRACT_METHOD_none</configKey>
<description><![CDATA[ This abstract method is already defined in an interface that is implemented by this abstract       class. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.USM_USELESS_SUBCLASS_METHOD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.USM_USELESS_SUBCLASS_METHOD_generic</configKey>
<description><![CDATA[ This derived method merely calls the same superclass method passing in the exact parameters       received. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.USM_USELESS_SUBCLASS_METHOD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.USM_USELESS_SUBCLASS_METHOD_none</configKey>
<description><![CDATA[ This derived method merely calls the same superclass method passing in the exact parameters       received. (<i>FindBugs&trade; Experimental</i>)]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD_generic</configKey>
<description><![CDATA[ This field is never read. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD_none</configKey>
<description><![CDATA[ This field is never read. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD_generic</configKey>
<description><![CDATA[ This field is never used. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD_none</configKey>
<description><![CDATA[ This field is never used. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_generic</configKey>
<description><![CDATA[ This field is never initialized within any constructor, and is therefore could be null after the object is constructed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR_none</configKey>
<description><![CDATA[ This field is never initialized within any constructor, and is therefore could be null after the object is constructed. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_generic</configKey>
<description><![CDATA[ No writes were seen to this public/protected field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD_none</configKey>
<description><![CDATA[ No writes were seen to this public/protected field. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XFB_XML_FACTORY_BYPASS_generic</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XFB_XML_FACTORY_BYPASS_generic</configKey>
<description><![CDATA[ This method allocates a specific implementation of an xml interface. ]]></description>
</rule>
<rule>
<key>STATIC_JAVA_FB.XFB_XML_FACTORY_BYPASS_none</key>
<priority>MAJOR</priority>
<configKey>STATIC_JAVA_FB.XFB_XML_FACTORY_BYPASS_none</configKey>
<description><![CDATA[ This method allocates a specific implementation of an xml interface. ]]></description>
</rule>
</rules>
